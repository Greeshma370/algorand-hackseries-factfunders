{
  "version": 3,
  "sources": [
    "../../ff/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuD0D;;AAAf;AAAnC;AAMqD;;AAAf;AAAtC;AATR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;;AAyOK;;AAAA;AAAA;AAAA;;AAAA;AAzOL;;;AAyOK;;;AAAA;;AAvBA;;AAAA;AAAA;AAAA;;AAAA;AAlNL;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkNK;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAzLL;;;AAyLK;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAhKL;;;AAgKK;;;AAAA;;AAjCA;;AAAA;AAAA;AAAA;;AAAA;AA/HL;;;AAAA;;;AA+HK;;;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AAlGL;;;AAAA;;;AAkGK;;;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AA5EL;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4EK;;;AAAA;;AA9DA;;AAAA;AAAA;AAAA;;AAAA;AAdL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcK;;;AAAA;;AAdL;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA;;;AAWe;;AAAA;;AAAkB;;;;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAkB;;AAAlB;AAAP;AAEM;AAAA;;AAAA;AAAA;AACa;AACA;AAEC;;AAAA;AAAA;AAAP;AAAA;;AAAA;;AAAA;AAArB;;;AACwB;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEH;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AACE;;AAAA;;;AAFa;;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAIV;AAJU;AAKN;AALM;AAMP;AANO;AAOZ;AAPY;AAQC;AARD;AASJ;AATI;AAAA;AAAA;AAGT;AAHS;AAAxB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;AAWsC;AAAA;AAAtC;;AAAmB;AAAnB;;;;;AAEG;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAkB;AAAlB;AAAP;AACO;;AAAA;AAAA;AAAA;AAAP;AAAA;AACkC;;AAA3B;AAAP;AACO;;AAAA;;;AAAA;AAAP;AACO;;AAAA;;;AAAA;AAAP;AACO;;AAAA;;;AAAA;AAAP;AAQuB;;AAMD;;AAAP;AAZA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAOG;AAPH;AAAA;AAAA;AAAA;;;AAAA;AAQK;AARL;AASS;AATT;AAWO;AAXP;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAef;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAA;AAAA;AAAA;;AAA2B;AAA3B;AACoC;AAAA;;AAAA;AAAA;AAAA;AAAoC;AAApC;AAAP;AAA7B;;AAAA;AAAA;;AAGR;;;AAE8B;AAAf;;AAAA;AAAA;;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;;;AAAqB;AAAA;;;AAArB;AAAP;AAEA;;AAAS;;AACT;;AAAQ;;AACW;;AAAA;AAAA;AACZ;;AAAA;;AAAoB;;AAApB;AAAP;AAE2B;;AAAxB;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AACmC;;AAAA;AAAA;;AAAA;AAAkC;AAAlC;AAAP;AAA3B;;AAAA;;AACmC;;AAAA;AAAnC;AAI0B;;AAAA;AAAA;;AAAA;AAA8B;AAA9B;AAAP;AAAvB;;AAC4B;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAArB;;AACA;;AAAA;AAAA;;AAAA;AAAA;;AAJ8C;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAAnC;;;;AAOZ;;;;;AAE8B;AAAf;;AAAA;AAAA;;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;;;AAA2B;;AAA3B;AAAP;AACO;AAAA;;;AAAsB;;AAAA;;;AAAtB;AAAP;AACO;AAAA;;AAAA;AAAA;AAAA;;AAAgC;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAhC;AAAP;AAEe;;AACE;AACN;AAAA;;AAAA;;AAAA;AAAnB;;;AACwB;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAf;;;AACgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACiC;;AAAA;AAAA;;AAAA;AAAjC;;AACmC;AAAe;;;AAAf;AAAP;AAA5B;;AACA;;AAAA;AAAA;AACsB;AAAtB;;AAC0B;AAA1B;;AACyB;AAAzB;;AACA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;AAEA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;;;AAER;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;;AAAA;AAAA;AAAA;;AAAmC;AAAnC;;AAGR;;;AAE8B;AAAf;;AAAA;AAAA;;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AACqB;AAAA;;AAAA;AAAA;AAAA;;AAAhB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEM;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAC1B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AACkC;;AAAf;AAAP;;;;;;;;AAEG;;AAAA;;;AAA0B;;AAA1B;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAwB;AAAxB;AAAP;AAEe;;AACR;AAAA;;AAAA;AAAA;AAAP;AAEkB;;AAAsD;;AAAtD;AACQ;;AAAnB;AAAA;AAAA;AAAA;AAAA;;AAAP;AACiB;AAAA;AACV;AAAkB;;;;;;;;;;AAAlB;AAAP;AAEiB;AAAyB;;;;AAAzB;AAAR;AACN;;AAAA;AAAA;AAAX;;;AACyC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAAtB;;AAAA;;AAI4B;;AAAA;AAAA;;AAAA;AAAgC;AAAhC;AAAP;AAAzB;;AACA;;AAAA;;;AAA+B;;AAA/B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AALqC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAA1B;;AAAA;;;;;AAQZ;;;AAE8B;AAAf;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;AACqB;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAEG;;AACR;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAwB;AAAxB;AAAP;AACO;;AAAA;;AAAA;AAAP;AACsB;;AAAA;;AAAA;AAAf;AAAP;AACO;AAAA;;AAAA;AAA6B;;AAAA;;AAAA;AAA7B;AAAP;AACW;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAJ;AAAA;AAAP;AAEU;;AAAA;;;AACV;AACW;;AAEA;;AAAA;AAAA;;;;;;;AAHX;;;AAAA;;;AAAA;AAMA;;AAAA;AAAA;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AACgD;AAAhD;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAGR;;;;;;AAE8B;AAAf;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAC6B;AAAA;;AAAA;AAAhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACL;;AACkB;AAAA;;AAAA;AAAf;AAEA;;AAAsD;;AAAtD;AACQ;;AAAnB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAP;AACiB;AAAA;AAAA;;AAAA;AAEI;;;AAAlB;AAAX;;;AAC+B;;AAAA;AAAA;;AAAA;AAA8B;AAAA;;AAAA;AAAA;AAAA;;AAA9B;AAAnB;;AACG;;AAAiB;AAAjB;AAAf;;;AAC0D;;AAAA;AAAnB;;AAAA;AAAA;;AAAA;AAAP;AAChB;AACW;;AACE;;AACF;;AAAA;;;;;;;AAHX;;;AAAA;;;AAAA;AAKA;;AAAkC;AAAlC;;AAIhB;;;AAQe;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAP;AAAA;AACO;;AAAA;;AAAkB;;AAAlB;AAAP;AAEM;AAAA;;AAAA;AAAA;AAKK;AAAA;AAJa;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKZ;AALY;AAAxB;;AAAA;;AAAA;AAAA;AAAA;AAOuC;AAAa;AAAb;AAAP;AAAhC;;AAAA;AAAA;;AAGR;;;AAE0B;;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAEI;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAJ;AAAA;AAAP;AACO;;AAA2B;;AAAA;;AAAA;AAA3B;AAAP;AACqB;;;AAAd;;AAAA;AAAA;;;AAA4C;;AAAA;;;AAAd;;AAAA;AAA9B;;;;AAAP;AAEA;AACW;;AACE;;AACF;;AAAA;AAAA;;AAAA;;AAAA;;;;;;;AAHX;;;AAAA;;;AAAA;AAMA;;;AAAA;AAAA;AACA;;AAAA;AAAA;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 56 288"
    },
    "9": {
      "op": "bytecblock 0x0000000000000000 0x0000 0x00 \"proposals\" \"noOfProposals\" \"noOfFutureFunds\" 0x0002 \"milestoneVotes_\" \"donations\" \"futureFund_\""
    },
    "106": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "108": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "111": {
      "op": "bytec 4 // \"noOfProposals\"",
      "defined_out": [
        "\"noOfProposals\""
      ],
      "stack_out": [
        "\"noOfProposals\""
      ]
    },
    "113": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "\"noOfProposals\"",
        "0x0000000000000000"
      ],
      "stack_out": [
        "\"noOfProposals\"",
        "0x0000000000000000"
      ]
    },
    "114": {
      "op": "app_global_put",
      "stack_out": []
    },
    "115": {
      "op": "bytec 5 // \"noOfFutureFunds\"",
      "defined_out": [
        "\"noOfFutureFunds\""
      ],
      "stack_out": [
        "\"noOfFutureFunds\""
      ]
    },
    "117": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "\"noOfFutureFunds\"",
        "0x0000000000000000"
      ]
    },
    "118": {
      "op": "app_global_put",
      "stack_out": []
    },
    "119": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "121": {
      "op": "bz main_bare_routing@13",
      "stack_out": []
    },
    "124": {
      "op": "pushbytess 0x6a501e58 0x876755d0 0x556f82c3 0x8c507f18 0x2794d963 0xe64059d1 0xe9128226 0x26695677 // method \"create_proposal(string,string,string,string,uint64,(string,uint64)[],pay)void\", method \"donate_proposal(uint64,pay)void\", method \"submit_proof(uint64,string)void\", method \"vote_milestone(uint64,bool)void\", method \"claim_milestone(uint64)void\", method \"refund_if_inactive(uint64)void\", method \"fund_future_self(address,address,uint64,pay)void\", method \"claim_future_self(uint64)void\"",
      "defined_out": [
        "Method(claim_future_self(uint64)void)",
        "Method(claim_milestone(uint64)void)",
        "Method(create_proposal(string,string,string,string,uint64,(string,uint64)[],pay)void)",
        "Method(donate_proposal(uint64,pay)void)",
        "Method(fund_future_self(address,address,uint64,pay)void)",
        "Method(refund_if_inactive(uint64)void)",
        "Method(submit_proof(uint64,string)void)",
        "Method(vote_milestone(uint64,bool)void)"
      ],
      "stack_out": [
        "Method(create_proposal(string,string,string,string,uint64,(string,uint64)[],pay)void)",
        "Method(donate_proposal(uint64,pay)void)",
        "Method(submit_proof(uint64,string)void)",
        "Method(vote_milestone(uint64,bool)void)",
        "Method(claim_milestone(uint64)void)",
        "Method(refund_if_inactive(uint64)void)",
        "Method(fund_future_self(address,address,uint64,pay)void)",
        "Method(claim_future_self(uint64)void)"
      ]
    },
    "166": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claim_future_self(uint64)void)",
        "Method(claim_milestone(uint64)void)",
        "Method(create_proposal(string,string,string,string,uint64,(string,uint64)[],pay)void)",
        "Method(donate_proposal(uint64,pay)void)",
        "Method(fund_future_self(address,address,uint64,pay)void)",
        "Method(refund_if_inactive(uint64)void)",
        "Method(submit_proof(uint64,string)void)",
        "Method(vote_milestone(uint64,bool)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_proposal(string,string,string,string,uint64,(string,uint64)[],pay)void)",
        "Method(donate_proposal(uint64,pay)void)",
        "Method(submit_proof(uint64,string)void)",
        "Method(vote_milestone(uint64,bool)void)",
        "Method(claim_milestone(uint64)void)",
        "Method(refund_if_inactive(uint64)void)",
        "Method(fund_future_self(address,address,uint64,pay)void)",
        "Method(claim_future_self(uint64)void)",
        "tmp%2#0"
      ]
    },
    "169": {
      "op": "match main_create_proposal_route@5 main_donate_proposal_route@6 main_submit_proof_route@7 main_vote_milestone_route@8 main_claim_milestone_route@9 main_refund_if_inactive_route@10 main_fund_future_self_route@11 main_claim_future_self_route@12",
      "stack_out": []
    },
    "187": {
      "block": "main_after_if_else@15",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "188": {
      "op": "return",
      "stack_out": []
    },
    "189": {
      "block": "main_claim_future_self_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "191": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "192": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "193": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "195": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "196": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "199": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.claim_future_self",
      "op": "callsub claim_future_self",
      "stack_out": []
    },
    "202": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "203": {
      "op": "return",
      "stack_out": []
    },
    "204": {
      "block": "main_fund_future_self_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "206": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "207": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "208": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "210": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "211": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "214": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "217": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "220": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "tmp%39#0"
      ]
    },
    "222": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "tmp%39#0",
        "1"
      ]
    },
    "223": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "gtxn_idx%2#0"
      ]
    },
    "224": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "225": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "227": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "228": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "229": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%6#0",
        "gtxn_idx%2#0"
      ]
    },
    "230": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.fund_future_self",
      "op": "callsub fund_future_self",
      "stack_out": []
    },
    "233": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "234": {
      "op": "return",
      "stack_out": []
    },
    "235": {
      "block": "main_refund_if_inactive_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "237": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "238": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "239": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "241": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "242": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "245": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.refund_if_inactive",
      "op": "callsub refund_if_inactive",
      "stack_out": []
    },
    "248": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "249": {
      "op": "return",
      "stack_out": []
    },
    "250": {
      "block": "main_claim_milestone_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "252": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "253": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "254": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "256": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "257": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "260": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.claim_milestone",
      "op": "callsub claim_milestone",
      "stack_out": []
    },
    "263": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "264": {
      "op": "return",
      "stack_out": []
    },
    "265": {
      "block": "main_vote_milestone_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "267": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "268": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "269": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "271": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "272": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "275": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "278": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.vote_milestone",
      "op": "callsub vote_milestone",
      "stack_out": []
    },
    "281": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "282": {
      "op": "return",
      "stack_out": []
    },
    "283": {
      "block": "main_submit_proof_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "285": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "286": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "287": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "289": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "290": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "293": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%22#0"
      ]
    },
    "296": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.submit_proof",
      "op": "callsub submit_proof",
      "stack_out": []
    },
    "299": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "300": {
      "op": "return",
      "stack_out": []
    },
    "301": {
      "block": "main_donate_proposal_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "303": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "304": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "305": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "307": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "308": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "311": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%17#0"
      ]
    },
    "313": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[8]%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%17#0",
        "1"
      ]
    },
    "314": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%1#0"
      ]
    },
    "315": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "316": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "318": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "319": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "320": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%1#0"
      ]
    },
    "321": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.donate_proposal",
      "op": "callsub donate_proposal",
      "stack_out": []
    },
    "324": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "325": {
      "op": "return",
      "stack_out": []
    },
    "326": {
      "block": "main_create_proposal_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "328": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "329": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "330": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "332": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "333": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "336": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "339": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "342": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "345": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "348": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0"
      ]
    },
    "351": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "353": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "tmp%12#0",
        "1"
      ]
    },
    "354": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "gtxn_idx%0#0"
      ]
    },
    "355": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "356": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "358": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "359": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "360": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%11#0",
        "gtxn_idx%0#0"
      ]
    },
    "361": {
      "callsub": "smart_contracts.ff.contract.ProposalContract.create_proposal",
      "op": "callsub create_proposal",
      "stack_out": []
    },
    "364": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "365": {
      "op": "return",
      "stack_out": []
    },
    "366": {
      "block": "main_bare_routing@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "368": {
      "op": "bnz main_after_if_else@15",
      "stack_out": []
    },
    "371": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "373": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "374": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "375": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "376": {
      "op": "return",
      "stack_out": []
    },
    "377": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "380": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "item_offset_adjustment#2"
      ]
    },
    "382": {
      "op": "dup"
    },
    "383": {
      "op": "frame_dig -2"
    },
    "385": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "386": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "387": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "389": {
      "op": "intc_2 // 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "390": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "391": {
      "op": "intc_1 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "392": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "394": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%0#0"
      ]
    },
    "396": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "397": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "400": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "402": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "404": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "405": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "407": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "408": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "410": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "411": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "412": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "415": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "417": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "418": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "419": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "421": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "422": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "423": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "425": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "428": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "430": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "431": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "433": {
      "op": "intc_1 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "434": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "436": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "438": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "440": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "441": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "444": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "446": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "448": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "449": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "451": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "452": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "454": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "455": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "456": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "459": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0",
        "new_head#0"
      ]
    },
    "461": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "462": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "463": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "465": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "466": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "467": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "469": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "472": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "474": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "476": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "477": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%9#0"
      ]
    },
    "478": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "481": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0",
        "new_head#0"
      ]
    },
    "483": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "484": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "486": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ]
    },
    "488": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0",
        "item_offset_adjustment#2"
      ]
    },
    "490": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "491": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "492": {
      "op": "frame_dig -1",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "494": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "495": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "497": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0"
      ]
    },
    "499": {
      "op": "uncover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0",
        "tmp%17#0"
      ]
    },
    "501": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "502": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%19#0"
      ]
    },
    "503": {
      "op": "frame_bury 0"
    },
    "505": {
      "retsub": true,
      "op": "retsub"
    },
    "506": {
      "subroutine": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "params": {
        "source#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64"
      },
      "block": "dynamic_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "509": {
      "op": "frame_dig -3",
      "defined_out": [
        "source#0 (copy)"
      ],
      "stack_out": [
        "source#0 (copy)"
      ]
    },
    "511": {
      "op": "substring 0 2",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0"
      ]
    },
    "514": {
      "op": "dup",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "size_b#0"
      ]
    },
    "515": {
      "op": "btoi",
      "defined_out": [
        "array_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0"
      ]
    },
    "516": {
      "op": "frame_dig -3",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "source#0 (copy)"
      ]
    },
    "518": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0"
      ]
    },
    "521": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "index#0 (copy)",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "index#0 (copy)"
      ]
    },
    "523": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "array_length#0",
        "index#0 (copy)",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "index#0 (copy)",
        "2"
      ]
    },
    "524": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "size_b#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "tmp%0#1"
      ]
    },
    "525": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "array_head_and_tail#0 (copy)",
        "array_length#0",
        "size_b#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "tmp%0#1",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "527": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#1"
      ]
    },
    "528": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0"
      ]
    },
    "529": {
      "op": "frame_dig -1",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "index#0 (copy)"
      ]
    },
    "531": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail#0",
        "array_length#0",
        "index#0 (copy)",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "532": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "original_offset#0",
        "size_b#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "tmp%1#1"
      ]
    },
    "533": {
      "op": "intc_2 // 2",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "tmp%1#1",
        "2"
      ]
    },
    "534": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0"
      ]
    },
    "535": {
      "op": "dup",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "536": {
      "op": "cover 4",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0"
      ]
    },
    "538": {
      "op": "dig 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "540": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "541": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0"
      ]
    },
    "542": {
      "op": "dig 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "544": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0"
      ]
    },
    "545": {
      "op": "dig 4",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "array_length#0 (copy)",
        "end_of_tail#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "547": {
      "op": "frame_dig -1",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "549": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%3#0"
      ]
    },
    "550": {
      "op": "intc_0 // 1",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%3#0",
        "1"
      ]
    },
    "551": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "head_offset#0",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0"
      ]
    },
    "552": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "head_offset#0",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)"
      ]
    },
    "554": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0"
      ]
    },
    "556": {
      "op": "uncover 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0",
        "is_before_end#0"
      ]
    },
    "558": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "559": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)"
      ]
    },
    "560": {
      "op": "dig 3",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "head_offset#0",
        "original_offset#0",
        "original_offset#0 (copy)",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0 (copy)"
      ]
    },
    "562": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "original_item_length#0"
      ]
    },
    "563": {
      "op": "cover 5",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "565": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item#0 (copy)",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)"
      ]
    },
    "567": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item_length#0"
      ]
    },
    "568": {
      "op": "cover 5",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "570": {
      "op": "dig 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "572": {
      "op": "intc_1 // 0",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0"
      ]
    },
    "573": {
      "op": "uncover 4",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0",
        "original_offset#0"
      ]
    },
    "575": {
      "op": "substring3",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%4#0"
      ]
    },
    "576": {
      "op": "frame_dig -2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%4#0",
        "new_item#0 (copy)"
      ]
    },
    "578": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%5#0"
      ]
    },
    "579": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%5#0",
        "array_head_and_tail#0"
      ]
    },
    "581": {
      "op": "uncover 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "end_of_tail#0",
        "tmp%5#0",
        "array_head_and_tail#0",
        "end_offset#0"
      ]
    },
    "583": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "tmp%5#0",
        "array_head_and_tail#0",
        "end_offset#0",
        "end_of_tail#0"
      ]
    },
    "585": {
      "op": "substring3",
      "defined_out": [
        "array_length#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "586": {
      "op": "concat",
      "defined_out": [
        "array_length#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "new_head_and_tail#0"
      ]
    },
    "587": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0"
      ]
    },
    "588": {
      "op": "intc_2 // 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0",
        "2"
      ]
    },
    "589": {
      "op": "*",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0"
      ]
    },
    "590": {
      "block": "dynamic_array_replace_dynamic_element_for_header@2",
      "stack_in": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "592": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "594": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "continue_looping%0#0"
      ]
    },
    "595": {
      "op": "bz dynamic_array_replace_dynamic_element_after_for@5",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0"
      ]
    },
    "598": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "new_head_and_tail#0"
      ]
    },
    "600": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "601": {
      "op": "frame_dig 1",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "603": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "604": {
      "op": "cover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "606": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "607": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "tail_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "new_item_length#0"
      ]
    },
    "609": {
      "op": "+",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "610": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "original_item_length#0"
      ]
    },
    "612": {
      "op": "-",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "613": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%10#0"
      ]
    },
    "614": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset_bytes#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset_bytes#0"
      ]
    },
    "617": {
      "op": "dig 2"
    },
    "619": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "620": {
      "op": "replace3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "621": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "623": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0",
        "2"
      ]
    },
    "624": {
      "op": "+",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "625": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0"
      ]
    },
    "627": {
      "op": "b dynamic_array_replace_dynamic_element_for_header@2"
    },
    "630": {
      "block": "dynamic_array_replace_dynamic_element_after_for@5",
      "stack_in": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "size_b#0"
      ]
    },
    "632": {
      "op": "frame_dig 4",
      "defined_out": [
        "new_head_and_tail#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "size_b#0",
        "new_head_and_tail#0"
      ]
    },
    "634": {
      "op": "concat",
      "defined_out": [
        "new_head_and_tail#0",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%7#0",
        "tmp%2#0"
      ]
    },
    "635": {
      "op": "frame_bury 0"
    },
    "637": {
      "retsub": true,
      "op": "retsub"
    },
    "638": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.create_proposal",
      "params": {
        "name#0": "bytes",
        "title#0": "bytes",
        "description#0": "bytes",
        "category#0": "bytes",
        "amount_required#0": "bytes",
        "milestones#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "create_proposal",
      "stack_in": [],
      "op": "proto 7 0"
    },
    "641": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "643": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "645": {
      "op": "pushint 2000000 // 2000000",
      "defined_out": [
        "2000000",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2000000"
      ]
    },
    "649": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "650": {
      "error": "Must pay exactly 2 Algos to create a proposal",
      "op": "assert // Must pay exactly 2 Algos to create a proposal",
      "stack_out": []
    },
    "651": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "653": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "655": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "657": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "658": {
      "error": "Payment must be sent to the contract address",
      "op": "assert // Payment must be sent to the contract address",
      "stack_out": []
    },
    "659": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "661": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "663": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "665": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "666": {
      "error": "Payment must be from the proposal creator",
      "op": "assert // Payment must be from the proposal creator",
      "stack_out": []
    },
    "667": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "668": {
      "op": "bytec 4 // \"noOfProposals\"",
      "defined_out": [
        "\"noOfProposals\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"noOfProposals\""
      ]
    },
    "670": {
      "op": "app_global_get_ex",
      "defined_out": [
        "idx#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "idx#0",
        "maybe_exists%0#0"
      ]
    },
    "671": {
      "error": "check self.no_of_proposals exists",
      "op": "assert // check self.no_of_proposals exists",
      "stack_out": [
        "idx#0"
      ]
    },
    "672": {
      "op": "bytec_1 // 0x0000"
    },
    "673": {
      "op": "intc_1 // 0"
    },
    "674": {
      "op": "frame_dig -2"
    },
    "676": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "final_milestones#0",
        "idx#0",
        "milestones#0 (copy)",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "milestones#0 (copy)",
        "0"
      ]
    },
    "677": {
      "op": "extract_uint16",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0"
      ]
    },
    "678": {
      "op": "intc_1 // 0",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "index#0",
        "milestones_total#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ]
    },
    "679": {
      "block": "create_proposal_for_header@1",
      "stack_in": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "index#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0"
      ]
    },
    "681": {
      "op": "frame_dig 3",
      "defined_out": [
        "index#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0",
        "tmp%8#0"
      ]
    },
    "683": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "index#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "continue_looping%0#0"
      ]
    },
    "684": {
      "op": "bz create_proposal_after_for@4",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ]
    },
    "687": {
      "op": "frame_dig -2",
      "defined_out": [
        "index#0",
        "milestones#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestones#0 (copy)"
      ]
    },
    "689": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "index#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0"
      ]
    },
    "692": {
      "op": "frame_dig 4",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "index#0"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "index#0",
        "index#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "index#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "695": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0",
        "array_head_and_tail%0#0",
        "index#0 (copy)"
      ]
    },
    "697": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "index#0",
        "index#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0",
        "array_head_and_tail%0#0",
        "index#0 (copy)",
        "2"
      ]
    },
    "698": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "index#0",
        "item_offset_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "699": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "index#0",
        "item_offset_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "701": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "702": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "index#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "703": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0"
      ]
    },
    "705": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "index#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0",
        "1"
      ]
    },
    "706": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0"
      ]
    },
    "707": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0",
        "index#0"
      ]
    },
    "708": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_head_and_tail%0#0",
        "index#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0"
      ]
    },
    "710": {
      "op": "frame_dig 3",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0",
        "tmp%8#0"
      ]
    },
    "712": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0",
        "tmp%8#0",
        "index#0 (copy)"
      ]
    },
    "714": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "index#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0",
        "has_next%0#0"
      ]
    },
    "715": {
      "op": "dig 3",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "717": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "index#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "index#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "718": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "index#0"
      ]
    },
    "720": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "index#0",
        "2"
      ]
    },
    "721": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "index#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "722": {
      "op": "dig 4",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "724": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "725": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "index#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "726": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "728": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "index#0",
        "item_offset%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "729": {
      "op": "substring3",
      "defined_out": [
        "index#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0"
      ]
    },
    "730": {
      "op": "dup",
      "defined_out": [
        "index#0",
        "milestone#0",
        "milestone#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "731": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "milestone#0 (copy)",
        "0"
      ]
    },
    "732": {
      "op": "extract_uint16",
      "defined_out": [
        "index#0",
        "item_start_offset%0#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "item_start_offset%0#0"
      ]
    },
    "733": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "item_start_offset%0#0",
        "milestone#0 (copy)"
      ]
    },
    "735": {
      "op": "len",
      "defined_out": [
        "index#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "736": {
      "op": "dig 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "milestone#0 (copy)"
      ]
    },
    "738": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "milestone#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "740": {
      "op": "substring3",
      "defined_out": [
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0"
      ]
    },
    "741": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "milestone#0 (copy)"
      ]
    },
    "743": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "746": {
      "op": "dig 1",
      "defined_out": [
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%10#0 (copy)"
      ]
    },
    "748": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "data_length%0#0"
      ]
    },
    "749": {
      "op": "pushint 53 // 53",
      "defined_out": [
        "53",
        "data_length%0#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "data_length%0#0",
        "53"
      ]
    },
    "751": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "current_tail_offset%1#0"
      ]
    },
    "752": {
      "op": "pushbytes 0x0035",
      "defined_out": [
        "0x0035",
        "current_tail_offset%1#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%11#0",
        "current_tail_offset%1#0",
        "0x0035"
      ]
    },
    "756": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "current_tail_offset%1#0",
        "0x0035",
        "tmp%11#0"
      ]
    },
    "758": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "759": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "760": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%1#0"
      ]
    },
    "761": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "index#0",
        "milestone#0",
        "offset_as_uint16%1#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "764": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "765": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%3#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "766": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "767": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%4#0",
        "0x0000000000000000"
      ]
    },
    "768": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "769": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "770": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "771": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_tuple_buffer%6#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%6#0",
        "0x00"
      ]
    },
    "772": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "773": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%7#0",
        "0x0000000000000000"
      ]
    },
    "774": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "775": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%8#0",
        "0x0000000000000000"
      ]
    },
    "776": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "tmp%10#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "777": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "encoded_tuple_buffer%9#0",
        "tmp%10#0"
      ]
    },
    "778": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "index#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "779": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "encoded_tuple_buffer%10#0",
        "index#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "encoded_tuple_buffer%10#0",
        "0x0000"
      ]
    },
    "780": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "index#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "781": {
      "op": "bytec 6 // 0x0002",
      "defined_out": [
        "0x0002",
        "encoded_tuple_buffer%11#0",
        "index#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "encoded_tuple_buffer%11#0",
        "0x0002"
      ]
    },
    "783": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "0x0002",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "784": {
      "op": "concat",
      "defined_out": [
        "index#0",
        "milestone#0",
        "result%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0"
      ]
    },
    "785": {
      "op": "frame_dig 1",
      "defined_out": [
        "final_milestones#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "final_milestones#0"
      ]
    },
    "787": {
      "op": "dup",
      "defined_out": [
        "final_milestones#0",
        "final_milestones#0 (copy)",
        "index#0",
        "milestone#0",
        "result%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "final_milestones#0",
        "final_milestones#0 (copy)"
      ]
    },
    "788": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "final_milestones#0",
        "final_milestones#0 (copy)",
        "0"
      ]
    },
    "789": {
      "op": "extract_uint16",
      "defined_out": [
        "final_milestones#0",
        "index#0",
        "l_count%0#0",
        "milestone#0",
        "result%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "final_milestones#0",
        "l_count%0#0"
      ]
    },
    "790": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "l_count%0#0",
        "final_milestones#0"
      ]
    },
    "791": {
      "op": "extract 2 0",
      "defined_out": [
        "final_milestones#0",
        "index#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "milestone#0",
        "result%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "794": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "795": {
      "op": "uncover 3",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "result%1#0"
      ]
    },
    "797": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "final_milestones#0"
      ]
    },
    "800": {
      "op": "frame_bury 1",
      "defined_out": [
        "final_milestones#0",
        "index#0",
        "milestone#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0"
      ]
    },
    "802": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestone#0",
        "2"
      ]
    },
    "803": {
      "op": "extract_uint64",
      "defined_out": [
        "final_milestones#0",
        "index#0",
        "tmp%13#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%13#0"
      ]
    },
    "804": {
      "op": "frame_dig 2",
      "defined_out": [
        "final_milestones#0",
        "index#0",
        "milestones_total#0",
        "tmp%13#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%13#0",
        "milestones_total#0"
      ]
    },
    "806": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestones_total#0"
      ]
    },
    "807": {
      "op": "frame_bury 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ]
    },
    "809": {
      "op": "b create_proposal_for_header@1"
    },
    "812": {
      "block": "create_proposal_after_for@4",
      "stack_in": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "milestones_total#0"
      ]
    },
    "814": {
      "op": "itob",
      "defined_out": [
        "milestones_total#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%14#0"
      ]
    },
    "815": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount_required#0 (copy)",
        "milestones_total#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%14#0",
        "amount_required#0 (copy)"
      ]
    },
    "817": {
      "op": "b==",
      "defined_out": [
        "milestones_total#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%15#0"
      ]
    },
    "818": {
      "error": "Total milestone amount must equal the required amount",
      "op": "assert // Total milestone amount must equal the required amount",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ]
    },
    "819": {
      "op": "frame_dig -3",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "amount_required#0 (copy)"
      ]
    },
    "821": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "amount_required#0 (copy)",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "amount_required#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "822": {
      "op": "b>",
      "defined_out": [
        "milestones_total#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%16#0"
      ]
    },
    "823": {
      "error": "Amount required must be greater than 0",
      "op": "assert // Amount required must be greater than 0",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ]
    },
    "824": {
      "op": "frame_dig 1",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0"
      ]
    },
    "826": {
      "op": "dup",
      "defined_out": [
        "final_milestones#0",
        "final_milestones#0 (copy)",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "final_milestones#0 (copy)"
      ]
    },
    "827": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "final_milestones#0",
        "final_milestones#0 (copy)",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "final_milestones#0 (copy)",
        "0"
      ]
    },
    "828": {
      "op": "extract_uint16",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%17#0"
      ]
    },
    "829": {
      "op": "dup",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "830": {
      "error": "At least one milestone is required",
      "op": "assert // At least one milestone is required",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%17#0"
      ]
    },
    "831": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%17#0",
        "5"
      ]
    },
    "833": {
      "op": "<=",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%20#0"
      ]
    },
    "834": {
      "error": "Maximum of 5 milestones allowed",
      "op": "assert // Maximum of 5 milestones allowed",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0"
      ]
    },
    "835": {
      "op": "frame_dig -7",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "name#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "name#0 (copy)"
      ]
    },
    "837": {
      "op": "extract 2 0",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%21#0"
      ]
    },
    "840": {
      "op": "len",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%22#0"
      ]
    },
    "841": {
      "error": "Proposal name cannot be empty",
      "op": "assert // Proposal name cannot be empty",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0"
      ]
    },
    "842": {
      "op": "frame_dig -6",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "title#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "title#0 (copy)"
      ]
    },
    "844": {
      "op": "extract 2 0",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%24#0"
      ]
    },
    "847": {
      "op": "len",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%25#0"
      ]
    },
    "848": {
      "error": "Proposal title cannot be empty",
      "op": "assert // Proposal title cannot be empty",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0"
      ]
    },
    "849": {
      "op": "frame_dig -5",
      "defined_out": [
        "description#0 (copy)",
        "final_milestones#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "description#0 (copy)"
      ]
    },
    "851": {
      "op": "extract 2 0",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%27#0"
      ]
    },
    "854": {
      "op": "len",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%28#0"
      ]
    },
    "855": {
      "error": "Proposal description cannot be empty",
      "op": "assert // Proposal description cannot be empty",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0"
      ]
    },
    "856": {
      "op": "txn Sender",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0"
      ]
    },
    "858": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "to_encode%0#0"
      ]
    },
    "860": {
      "op": "itob",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ]
    },
    "861": {
      "op": "frame_dig -7",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "name#0 (copy)"
      ]
    },
    "863": {
      "op": "len",
      "defined_out": [
        "data_length%2#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "data_length%2#0"
      ]
    },
    "864": {
      "op": "pushint 90 // 90",
      "defined_out": [
        "90",
        "data_length%2#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "data_length%2#0",
        "90"
      ]
    },
    "866": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%4#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0"
      ]
    },
    "867": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%4#0",
        "current_tail_offset%4#0 (copy)",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "current_tail_offset%4#0 (copy)"
      ]
    },
    "868": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "current_tail_offset%4#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "as_bytes%4#0"
      ]
    },
    "869": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%4#0",
        "final_milestones#0",
        "milestones_total#0",
        "offset_as_uint16%3#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "offset_as_uint16%3#0"
      ]
    },
    "872": {
      "op": "pushbytes 0x005a",
      "defined_out": [
        "0x005a",
        "current_tail_offset%4#0",
        "final_milestones#0",
        "milestones_total#0",
        "offset_as_uint16%3#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "offset_as_uint16%3#0",
        "0x005a"
      ]
    },
    "876": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "0x005a",
        "offset_as_uint16%3#0"
      ]
    },
    "877": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%14#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "878": {
      "op": "frame_dig -6",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%14#0",
        "title#0 (copy)"
      ]
    },
    "880": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%4#0",
        "data_length%3#0",
        "encoded_tuple_buffer%14#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%14#0",
        "data_length%3#0"
      ]
    },
    "881": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%14#0",
        "data_length%3#0",
        "current_tail_offset%4#0"
      ]
    },
    "883": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%14#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%14#0",
        "current_tail_offset%5#0"
      ]
    },
    "884": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%5#0",
        "current_tail_offset%5#0 (copy)",
        "encoded_tuple_buffer%14#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%14#0",
        "current_tail_offset%5#0",
        "current_tail_offset%5#0 (copy)"
      ]
    },
    "885": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%14#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%14#0",
        "current_tail_offset%5#0",
        "as_bytes%5#0"
      ]
    },
    "886": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%14#0",
        "final_milestones#0",
        "milestones_total#0",
        "offset_as_uint16%4#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%14#0",
        "current_tail_offset%5#0",
        "offset_as_uint16%4#0"
      ]
    },
    "889": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%5#0",
        "offset_as_uint16%4#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "891": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%14#0",
        "offset_as_uint16%4#0"
      ]
    },
    "892": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%15#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "893": {
      "op": "frame_dig -5",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%15#0",
        "description#0 (copy)"
      ]
    },
    "895": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%5#0",
        "data_length%4#0",
        "encoded_tuple_buffer%15#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%15#0",
        "data_length%4#0"
      ]
    },
    "896": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%15#0",
        "data_length%4#0",
        "current_tail_offset%5#0"
      ]
    },
    "898": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%15#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%15#0",
        "current_tail_offset%6#0"
      ]
    },
    "899": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%6#0",
        "current_tail_offset%6#0 (copy)",
        "encoded_tuple_buffer%15#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%15#0",
        "current_tail_offset%6#0",
        "current_tail_offset%6#0 (copy)"
      ]
    },
    "900": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%15#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%15#0",
        "current_tail_offset%6#0",
        "as_bytes%6#0"
      ]
    },
    "901": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%15#0",
        "final_milestones#0",
        "milestones_total#0",
        "offset_as_uint16%5#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%15#0",
        "current_tail_offset%6#0",
        "offset_as_uint16%5#0"
      ]
    },
    "904": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%6#0",
        "offset_as_uint16%5#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "906": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%15#0",
        "offset_as_uint16%5#0"
      ]
    },
    "907": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%16#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "908": {
      "op": "frame_dig -4",
      "defined_out": [
        "category#0 (copy)",
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%16#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%16#0",
        "category#0 (copy)"
      ]
    },
    "910": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%6#0",
        "data_length%5#0",
        "encoded_tuple_buffer%16#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%6#0",
        "encoded_tuple_buffer%16#0",
        "data_length%5#0"
      ]
    },
    "911": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%16#0",
        "data_length%5#0",
        "current_tail_offset%6#0"
      ]
    },
    "913": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%16#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%16#0",
        "current_tail_offset%7#0"
      ]
    },
    "914": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "915": {
      "op": "frame_dig -3",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%16#0",
        "amount_required#0 (copy)"
      ]
    },
    "917": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%17#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%30#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "tmp%30#0",
        "val_as_bytes%0#0",
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "918": {
      "op": "uncover 3",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%17#0",
        "tmp%30#0"
      ]
    },
    "920": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%18#0",
        "final_milestones#0",
        "milestones_total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "921": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%18#0",
        "0x0000000000000000"
      ]
    },
    "922": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%19#0",
        "final_milestones#0",
        "milestones_total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "current_tail_offset%7#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "923": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%19#0",
        "current_tail_offset%7#0"
      ]
    },
    "924": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "encoded_tuple_buffer%19#0",
        "final_milestones#0",
        "milestones_total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%19#0",
        "as_bytes%7#0"
      ]
    },
    "925": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "final_milestones#0",
        "milestones_total#0",
        "offset_as_uint16%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%19#0",
        "offset_as_uint16%6#0"
      ]
    },
    "928": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "final_milestones#0",
        "milestones_total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "929": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%20#0",
        "0x0000000000000000"
      ]
    },
    "930": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "final_milestones#0",
        "milestones_total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "931": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%21#0",
        "0x0000000000000000"
      ]
    },
    "932": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "final_milestones#0",
        "milestones_total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%22#0"
      ]
    },
    "933": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%22#0",
        "0x0000000000000000"
      ]
    },
    "934": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%23#0",
        "final_milestones#0",
        "milestones_total#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%23#0"
      ]
    },
    "935": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%23#0",
        "val_as_bytes%0#0"
      ]
    },
    "936": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%24#0",
        "final_milestones#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%24#0"
      ]
    },
    "937": {
      "op": "frame_dig -7",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%24#0",
        "name#0 (copy)"
      ]
    },
    "939": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%25#0",
        "final_milestones#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%25#0"
      ]
    },
    "940": {
      "op": "frame_dig -6",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%25#0",
        "title#0 (copy)"
      ]
    },
    "942": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%26#0",
        "final_milestones#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%26#0"
      ]
    },
    "943": {
      "op": "frame_dig -5",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%26#0",
        "description#0 (copy)"
      ]
    },
    "945": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%27#0",
        "final_milestones#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%27#0"
      ]
    },
    "946": {
      "op": "frame_dig -4",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%27#0",
        "category#0 (copy)"
      ]
    },
    "948": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%28#0",
        "final_milestones#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "final_milestones#0",
        "encoded_tuple_buffer%28#0"
      ]
    },
    "949": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "encoded_tuple_buffer%28#0",
        "final_milestones#0"
      ]
    },
    "950": {
      "op": "concat",
      "defined_out": [
        "final_milestones#0",
        "milestones_total#0",
        "new_proposal#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "new_proposal#0"
      ]
    },
    "951": {
      "op": "bytec_3 // \"proposals\"",
      "defined_out": [
        "\"proposals\"",
        "final_milestones#0",
        "milestones_total#0",
        "new_proposal#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "new_proposal#0",
        "\"proposals\""
      ]
    },
    "952": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"proposals\"",
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "new_proposal#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "new_proposal#0",
        "\"proposals\"",
        "idx#0"
      ]
    },
    "954": {
      "op": "dup",
      "defined_out": [
        "\"proposals\"",
        "final_milestones#0",
        "idx#0",
        "idx#0 (copy)",
        "milestones_total#0",
        "new_proposal#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "new_proposal#0",
        "\"proposals\"",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "955": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0",
        "new_proposal#0",
        "\"proposals\"",
        "idx#0 (copy)"
      ]
    },
    "957": {
      "op": "concat",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "new_proposal#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0",
        "new_proposal#0",
        "tmp%31#0"
      ]
    },
    "958": {
      "op": "dup",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "new_proposal#0",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0",
        "new_proposal#0",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ]
    },
    "959": {
      "op": "box_del",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "new_proposal#0",
        "tmp%31#0",
        "{box_del}"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0",
        "new_proposal#0",
        "tmp%31#0",
        "{box_del}"
      ]
    },
    "960": {
      "op": "pop",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0",
        "new_proposal#0",
        "tmp%31#0"
      ]
    },
    "961": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0",
        "tmp%31#0",
        "new_proposal#0"
      ]
    },
    "962": {
      "op": "box_put",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0"
      ]
    },
    "963": {
      "op": "bytec 7 // \"milestoneVotes_\"",
      "defined_out": [
        "\"milestoneVotes_\"",
        "final_milestones#0",
        "idx#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "idx#0",
        "\"milestoneVotes_\""
      ]
    },
    "965": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "\"milestoneVotes_\"",
        "idx#0"
      ]
    },
    "966": {
      "op": "concat",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%32#0"
      ]
    },
    "967": {
      "op": "dup",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "tmp%32#0",
        "tmp%32#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%32#0",
        "tmp%32#0 (copy)"
      ]
    },
    "968": {
      "op": "box_del",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%32#0",
        "{box_del}"
      ]
    },
    "969": {
      "op": "pop",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%32#0"
      ]
    },
    "970": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%32#0",
        "0x0000"
      ]
    },
    "971": {
      "op": "box_put",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ]
    },
    "972": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "0"
      ]
    },
    "973": {
      "op": "bytec 4 // \"noOfProposals\"",
      "defined_out": [
        "\"noOfProposals\"",
        "0",
        "final_milestones#0",
        "idx#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "0",
        "\"noOfProposals\""
      ]
    },
    "975": {
      "op": "app_global_get_ex",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "milestones_total#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "976": {
      "error": "check self.no_of_proposals exists",
      "op": "assert // check self.no_of_proposals exists",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "maybe_value%1#0"
      ]
    },
    "977": {
      "op": "btoi",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%33#0"
      ]
    },
    "978": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "tmp%33#0",
        "1"
      ]
    },
    "979": {
      "op": "+",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "to_encode%1#0"
      ]
    },
    "980": {
      "op": "itob",
      "defined_out": [
        "final_milestones#0",
        "idx#0",
        "milestones_total#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "val_as_bytes%1#0"
      ]
    },
    "981": {
      "op": "bytec 4 // \"noOfProposals\"",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "val_as_bytes%1#0",
        "\"noOfProposals\""
      ]
    },
    "983": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0",
        "\"noOfProposals\"",
        "val_as_bytes%1#0"
      ]
    },
    "984": {
      "op": "app_global_put",
      "stack_out": [
        "idx#0",
        "final_milestones#0",
        "milestones_total#0",
        "tmp%8#0",
        "index#0"
      ]
    },
    "985": {
      "retsub": true,
      "op": "retsub"
    },
    "986": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.donate_proposal",
      "params": {
        "proposal_id#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "donate_proposal",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "989": {
      "op": "bytec_3 // \"proposals\"",
      "defined_out": [
        "\"proposals\""
      ],
      "stack_out": [
        "\"proposals\""
      ]
    },
    "990": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ]
    },
    "992": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "993": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "995": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "996": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "998": {
      "error": "Proposal doesn't exist",
      "op": "assert // Proposal doesn't exist",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "999": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1000": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%1#0",
        "prop#0"
      ]
    },
    "1001": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%1#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1002": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1004": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0"
      ]
    },
    "1005": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1006": {
      "error": "Index access is out of bounds",
      "op": "extract 48 8 // on error: Index access is out of bounds",
      "defined_out": [
        "prop#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1009": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "reinterpret_biguint%0#0",
        "prop#0"
      ]
    },
    "1010": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "prop#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "1013": {
      "op": "b<",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%2#0"
      ]
    },
    "1014": {
      "error": "Goal already reached",
      "op": "assert // Goal already reached",
      "stack_out": [
        "tmp%0#0",
        "prop#0"
      ]
    },
    "1015": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "payment#0 (copy)"
      ]
    },
    "1017": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0"
      ]
    },
    "1019": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "payment#0 (copy)"
      ]
    },
    "1021": {
      "op": "gtxns Sender",
      "defined_out": [
        "amount#0",
        "donor#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donor#0"
      ]
    },
    "1023": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donor#0",
        "proposal_id#0 (copy)"
      ]
    },
    "1025": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "proposal_id#0 (copy)",
        "donor#0"
      ]
    },
    "1026": {
      "op": "concat",
      "defined_out": [
        "amount#0",
        "donation_box_key#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donation_box_key#0"
      ]
    },
    "1027": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donation_box_key#0",
        "payment#0 (copy)"
      ]
    },
    "1029": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount#0",
        "donation_box_key#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donation_box_key#0",
        "tmp%3#0"
      ]
    },
    "1031": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "amount#0",
        "donation_box_key#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donation_box_key#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1033": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "donation_box_key#0",
        "prop#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donation_box_key#0",
        "tmp%5#0"
      ]
    },
    "1034": {
      "error": "Payment must be sent to the contract address",
      "op": "assert // Payment must be sent to the contract address",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donation_box_key#0"
      ]
    },
    "1035": {
      "op": "bytec 8 // \"donations\"",
      "defined_out": [
        "\"donations\"",
        "amount#0",
        "donation_box_key#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "donation_box_key#0",
        "\"donations\""
      ]
    },
    "1037": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "\"donations\"",
        "donation_box_key#0"
      ]
    },
    "1038": {
      "op": "concat",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0"
      ]
    },
    "1039": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1040": {
      "op": "box_len",
      "defined_out": [
        "amount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1041": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "maybe_exists%2#0"
      ]
    },
    "1043": {
      "op": "bnz donate_proposal_else_body@2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0"
      ]
    },
    "1046": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0"
      ]
    },
    "1048": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1049": {
      "op": "pushint 66 // 66",
      "defined_out": [
        "66",
        "amount#0",
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0",
        "prop#0 (copy)",
        "66"
      ]
    },
    "1051": {
      "op": "extract_uint64",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0",
        "tmp%8#0"
      ]
    },
    "1052": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1053": {
      "op": "+",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0",
        "to_encode%0#0"
      ]
    },
    "1054": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0",
        "val_as_bytes%0#0"
      ]
    },
    "1055": {
      "op": "replace2 66",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "prop#0"
      ]
    },
    "1057": {
      "op": "frame_bury 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0"
      ]
    },
    "1059": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "amount#0"
      ]
    },
    "1061": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%6#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "val_as_bytes%1#0"
      ]
    },
    "1062": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0"
      ]
    },
    "1063": {
      "block": "donate_proposal_after_if_else@3",
      "stack_in": [
        "tmp%0#0",
        "prop#0",
        "amount#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0"
      ]
    },
    "1065": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "prop#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1066": {
      "op": "pushint 58 // 58",
      "defined_out": [
        "58",
        "prop#0",
        "prop#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "prop#0 (copy)",
        "58"
      ]
    },
    "1068": {
      "op": "extract_uint64",
      "defined_out": [
        "prop#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%14#0"
      ]
    },
    "1069": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "prop#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%14#0",
        "1"
      ]
    },
    "1070": {
      "op": "+",
      "defined_out": [
        "prop#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "to_encode%2#0"
      ]
    },
    "1071": {
      "op": "itob",
      "defined_out": [
        "prop#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "val_as_bytes%3#0"
      ]
    },
    "1072": {
      "op": "replace2 58",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0"
      ]
    },
    "1074": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1075": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "prop#0",
        "prop#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "prop#0 (copy)",
        "48"
      ]
    },
    "1077": {
      "op": "extract_uint64",
      "defined_out": [
        "prop#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%16#0"
      ]
    },
    "1078": {
      "op": "frame_dig 2",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%16#0",
        "amount#0"
      ]
    },
    "1080": {
      "op": "+",
      "defined_out": [
        "amount#0",
        "prop#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "to_encode%3#0"
      ]
    },
    "1081": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "prop#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "val_as_bytes%4#0"
      ]
    },
    "1082": {
      "op": "replace2 48",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0"
      ]
    },
    "1084": {
      "op": "frame_dig 0",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%0#0"
      ]
    },
    "1086": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1087": {
      "op": "box_del",
      "defined_out": [
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%0#0",
        "{box_del}"
      ]
    },
    "1088": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "prop#0",
        "tmp%0#0"
      ]
    },
    "1089": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%0#0",
        "prop#0"
      ]
    },
    "1090": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0"
      ]
    },
    "1091": {
      "retsub": true,
      "op": "retsub"
    },
    "1092": {
      "block": "donate_proposal_else_body@2",
      "stack_in": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0"
      ],
      "op": "dup",
      "defined_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ]
    },
    "1093": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1094": {
      "error": "check self.donations entry exists",
      "op": "assert // check self.donations entry exists",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "maybe_value%3#0"
      ]
    },
    "1095": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "tmp%11#0"
      ]
    },
    "1096": {
      "op": "frame_dig 2",
      "defined_out": [
        "amount#0",
        "tmp%11#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "tmp%11#0",
        "amount#0"
      ]
    },
    "1098": {
      "op": "+",
      "defined_out": [
        "amount#0",
        "tmp%6#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "to_encode%1#0"
      ]
    },
    "1099": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "tmp%6#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0",
        "tmp%6#0",
        "val_as_bytes%2#0"
      ]
    },
    "1100": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "amount#0"
      ]
    },
    "1101": {
      "op": "b donate_proposal_after_if_else@3"
    },
    "1104": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.submit_proof",
      "params": {
        "proposal_id#0": "bytes",
        "proof_link#0": "bytes"
      },
      "block": "submit_proof",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1107": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "idx#2"
      ]
    },
    "1109": {
      "op": "bytec_3 // \"proposals\"",
      "defined_out": [
        "\"proposals\""
      ],
      "stack_out": [
        "idx#2",
        "\"proposals\""
      ]
    },
    "1110": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "idx#2",
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ]
    },
    "1112": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0"
      ]
    },
    "1113": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1115": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1116": {
      "op": "bury 1",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1118": {
      "error": "Proposal doesn't exist",
      "op": "assert // Proposal doesn't exist",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1119": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1120": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "maybe_exists%1#0",
        "prop#0"
      ]
    },
    "1121": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "maybe_exists%1#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1122": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1124": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0"
      ]
    },
    "1125": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1126": {
      "error": "Index access is out of bounds",
      "op": "extract 16 32 // on error: Index access is out of bounds",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%2#0"
      ]
    },
    "1129": {
      "op": "txn Sender",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1131": {
      "op": "==",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%4#0"
      ]
    },
    "1132": {
      "error": "Only creator can submit proof",
      "op": "assert // Only creator can submit proof",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0"
      ]
    },
    "1133": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1134": {
      "error": "Index access is out of bounds",
      "op": "extract 48 8 // on error: Index access is out of bounds",
      "defined_out": [
        "prop#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1137": {
      "op": "dig 1",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "reinterpret_biguint%0#0",
        "prop#0 (copy)"
      ]
    },
    "1139": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "prop#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "1142": {
      "op": "b>=",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%5#0"
      ]
    },
    "1143": {
      "error": "Goal not reached yet",
      "op": "assert // Goal not reached yet",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0"
      ]
    },
    "1144": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1145": {
      "op": "pushint 74 // 74",
      "defined_out": [
        "74",
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)",
        "74"
      ]
    },
    "1147": {
      "op": "extract_uint64",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%7#0"
      ]
    },
    "1148": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1149": {
      "op": "uncover 2",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "tmp%7#0",
        "prop#0"
      ]
    },
    "1151": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "tmp%7#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1152": {
      "op": "intc_3 // 56",
      "defined_out": [
        "56",
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "tmp%7#0",
        "prop#0",
        "prop#0 (copy)",
        "56"
      ]
    },
    "1153": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "tmp%7#0",
        "prop#0",
        "item_start_offset%0#0"
      ]
    },
    "1154": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "tmp%7#0",
        "prop#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "1155": {
      "op": "cover 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "prop#0",
        "item_start_offset%0#0"
      ]
    },
    "1157": {
      "op": "cover 3",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "prop#0"
      ]
    },
    "1159": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1160": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "prop#0",
        "item_end_offset%0#0"
      ]
    },
    "1161": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "prop#0"
      ]
    },
    "1162": {
      "op": "cover 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "prop#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1164": {
      "op": "substring3",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1165": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "1166": {
      "op": "cover 2",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1168": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%8#0",
        "0"
      ]
    },
    "1169": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1170": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%9#0"
      ]
    },
    "1171": {
      "op": "cover 2",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1173": {
      "op": "<",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1174": {
      "error": "All milestones already completed",
      "op": "assert // All milestones already completed",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1175": {
      "op": "global LatestTimestamp"
    },
    "1177": {
      "op": "bytec_1 // 0x0000"
    },
    "1178": {
      "op": "intc_1 // 0",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ]
    },
    "1179": {
      "block": "submit_proof_for_header@1",
      "stack_in": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1181": {
      "op": "frame_dig 6",
      "defined_out": [
        "idx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "tmp%9#0"
      ]
    },
    "1183": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "idx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "1184": {
      "op": "bz submit_proof_after_for@7",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ]
    },
    "1187": {
      "op": "frame_dig 5",
      "defined_out": [
        "idx#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "tmp%8#0"
      ]
    },
    "1189": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "idx#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1192": {
      "op": "frame_dig 9",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "1194": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "idx#0",
        "idx#0 (copy)",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "1195": {
      "op": "cover 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)"
      ]
    },
    "1197": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "idx#0",
        "idx#0 (copy)",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "idx#0 (copy)",
        "2"
      ]
    },
    "1198": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "idx#0",
        "item_offset_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1199": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "idx#0",
        "item_offset_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1201": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1202": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "idx#0",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1203": {
      "op": "dig 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#0 (copy)"
      ]
    },
    "1205": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "idx#0",
        "idx#0 (copy)",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#0 (copy)",
        "1"
      ]
    },
    "1206": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "idx#0",
        "idx#2",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2"
      ]
    },
    "1207": {
      "op": "dup",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2",
        "idx#2"
      ]
    },
    "1208": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "idx#0",
        "idx#2",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2"
      ]
    },
    "1210": {
      "op": "frame_dig 6",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2",
        "tmp%9#0"
      ]
    },
    "1212": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "idx#0",
        "idx#2",
        "idx#2 (copy)",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2",
        "tmp%9#0",
        "idx#2 (copy)"
      ]
    },
    "1214": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "idx#0",
        "idx#2",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2",
        "has_next%0#0"
      ]
    },
    "1215": {
      "op": "dig 3",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1217": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "idx#0",
        "idx#2",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "idx#2",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "1218": {
      "op": "uncover 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "idx#2"
      ]
    },
    "1220": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "idx#2",
        "2"
      ]
    },
    "1221": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "idx#0",
        "idx#2",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "1222": {
      "op": "dig 4",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1224": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "1225": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "idx#0",
        "idx#2",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1226": {
      "op": "uncover 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "1228": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "idx#0",
        "idx#2",
        "item_offset%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "1229": {
      "op": "substring3",
      "defined_out": [
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1230": {
      "op": "swap",
      "defined_out": [
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "idx#0"
      ]
    },
    "1231": {
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "idx#0",
        "tmp%7#0"
      ]
    },
    "1233": {
      "op": "==",
      "defined_out": [
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%17#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "tmp%17#0"
      ]
    },
    "1234": {
      "op": "bz submit_proof_else_body@4",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1237": {
      "op": "dup",
      "defined_out": [
        "idx#0",
        "idx#2",
        "milestone#0",
        "milestone#0 (copy)",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "1238": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "idx#0",
        "idx#2",
        "milestone#0",
        "milestone#0 (copy)",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "milestone#0 (copy)",
        "10"
      ]
    },
    "1240": {
      "op": "extract_uint16",
      "defined_out": [
        "idx#0",
        "idx#2",
        "item_offset%1#0",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "item_offset%1#0"
      ]
    },
    "1241": {
      "op": "intc_1 // 0"
    },
    "1242": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "0",
        "item_offset%1#0"
      ]
    },
    "1243": {
      "op": "extract3",
      "defined_out": [
        "data_up_to_item%0#0",
        "idx#0",
        "idx#2",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "data_up_to_item%0#0"
      ]
    },
    "1244": {
      "op": "frame_dig -1",
      "defined_out": [
        "data_up_to_item%0#0",
        "idx#0",
        "idx#2",
        "proof_link#0 (copy)",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "data_up_to_item%0#0",
        "proof_link#0 (copy)"
      ]
    },
    "1246": {
      "op": "concat",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1247": {
      "op": "frame_dig 7",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "current_time#0"
      ]
    },
    "1249": {
      "op": "dup",
      "defined_out": [
        "current_time#0",
        "current_time#0 (copy)",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "current_time#0 (copy)",
        "current_time#0 (copy)"
      ]
    },
    "1250": {
      "op": "cover 2",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "current_time#0",
        "milestone#0",
        "current_time#0 (copy)"
      ]
    },
    "1252": {
      "op": "itob",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "current_time#0",
        "milestone#0",
        "val_as_bytes%0#0"
      ]
    },
    "1253": {
      "op": "replace2 37",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "current_time#0",
        "milestone#0"
      ]
    },
    "1255": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "current_time#0"
      ]
    },
    "1256": {
      "op": "pushint 180 // 180",
      "defined_out": [
        "180",
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "current_time#0",
        "180"
      ]
    },
    "1259": {
      "op": "+",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "to_encode%0#0"
      ]
    },
    "1260": {
      "op": "itob",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "val_as_bytes%1#0"
      ]
    },
    "1261": {
      "op": "replace2 45",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1263": {
      "op": "intc 4 // 288",
      "defined_out": [
        "288",
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "288"
      ]
    },
    "1265": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "288",
        "0"
      ]
    },
    "1266": {
      "op": "setbit",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1267": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "0x0000000000000000"
      ]
    },
    "1268": {
      "op": "replace2 12",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1270": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "0x0000000000000000"
      ]
    },
    "1271": {
      "op": "replace2 20",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1273": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "0x0000000000000000"
      ]
    },
    "1274": {
      "op": "replace2 28",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ]
    },
    "1276": {
      "op": "bytec 6 // 0x0002",
      "defined_out": [
        "0x0002",
        "current_time#0",
        "idx#0",
        "idx#2",
        "milestone#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "0x0002"
      ]
    },
    "1278": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "0x0002",
        "milestone#0"
      ]
    },
    "1279": {
      "op": "concat",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "result%1#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0"
      ]
    },
    "1280": {
      "op": "frame_dig 8",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "new_milestones#0",
        "result%1#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0",
        "new_milestones#0"
      ]
    },
    "1282": {
      "op": "dup",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "new_milestones#0",
        "new_milestones#0 (copy)",
        "result%1#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0",
        "new_milestones#0",
        "new_milestones#0 (copy)"
      ]
    },
    "1283": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0",
        "new_milestones#0",
        "new_milestones#0 (copy)",
        "0"
      ]
    },
    "1284": {
      "op": "extract_uint16",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "l_count%0#0",
        "new_milestones#0",
        "result%1#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0",
        "new_milestones#0",
        "l_count%0#0"
      ]
    },
    "1285": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0",
        "l_count%0#0",
        "new_milestones#0"
      ]
    },
    "1286": {
      "op": "extract 2 0",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "new_milestones#0",
        "result%1#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "1289": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "1290": {
      "op": "uncover 3",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "result%1#0"
      ]
    },
    "1292": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "new_milestones#0"
      ]
    },
    "1295": {
      "op": "frame_bury 8",
      "defined_out": [
        "current_time#0",
        "idx#0",
        "idx#2",
        "new_milestones#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ]
    },
    "1297": {
      "block": "submit_proof_after_if_else@5",
      "stack_in": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "idx#0"
      ]
    },
    "1299": {
      "op": "frame_bury 9",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ]
    },
    "1301": {
      "op": "b submit_proof_for_header@1"
    },
    "1304": {
      "block": "submit_proof_else_body@4",
      "stack_in": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0"
      ],
      "op": "bytec 6 // 0x0002",
      "defined_out": [
        "0x0002"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "milestone#0",
        "0x0002"
      ]
    },
    "1306": {
      "op": "swap",
      "defined_out": [
        "0x0002",
        "milestone#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "0x0002",
        "milestone#0"
      ]
    },
    "1307": {
      "op": "concat",
      "defined_out": [
        "result%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0"
      ]
    },
    "1308": {
      "op": "frame_dig 8",
      "defined_out": [
        "new_milestones#0",
        "result%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0",
        "new_milestones#0"
      ]
    },
    "1310": {
      "op": "dup",
      "defined_out": [
        "new_milestones#0",
        "new_milestones#0 (copy)",
        "result%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0",
        "new_milestones#0",
        "new_milestones#0 (copy)"
      ]
    },
    "1311": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "new_milestones#0",
        "new_milestones#0 (copy)",
        "result%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0",
        "new_milestones#0",
        "new_milestones#0 (copy)",
        "0"
      ]
    },
    "1312": {
      "op": "extract_uint16",
      "defined_out": [
        "l_count%1#0",
        "new_milestones#0",
        "result%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0",
        "new_milestones#0",
        "l_count%1#0"
      ]
    },
    "1313": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0",
        "l_count%1#0",
        "new_milestones#0"
      ]
    },
    "1314": {
      "op": "extract 2 0",
      "defined_out": [
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "new_milestones#0",
        "result%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0",
        "l_count%1#0",
        "l_head_and_tail%1#0"
      ]
    },
    "1317": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "new_milestones#0",
        "result%3#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "result%3#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1"
      ]
    },
    "1318": {
      "op": "uncover 3",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "l_count%1#0",
        "l_head_and_tail%1#0",
        "1",
        "result%3#0"
      ]
    },
    "1320": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "new_milestones#0"
      ]
    },
    "1323": {
      "op": "frame_bury 8",
      "defined_out": [
        "new_milestones#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ]
    },
    "1325": {
      "op": "b submit_proof_after_if_else@5"
    },
    "1328": {
      "block": "submit_proof_after_for@7",
      "stack_in": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "prop#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0"
      ]
    },
    "1330": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "prop#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0",
        "0"
      ]
    },
    "1331": {
      "op": "frame_dig 4",
      "defined_out": [
        "0",
        "item_start_offset%0#0",
        "prop#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "1333": {
      "op": "extract3",
      "defined_out": [
        "data_up_to_item%1#0",
        "item_start_offset%0#0",
        "prop#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "data_up_to_item%1#0"
      ]
    },
    "1334": {
      "op": "frame_dig 8",
      "defined_out": [
        "data_up_to_item%1#0",
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "data_up_to_item%1#0",
        "new_milestones#0"
      ]
    },
    "1336": {
      "op": "concat",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0"
      ]
    },
    "1337": {
      "op": "frame_dig 1",
      "defined_out": [
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0",
        "tmp%0#0"
      ]
    },
    "1339": {
      "op": "dup",
      "defined_out": [
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1340": {
      "op": "box_del",
      "defined_out": [
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0",
        "tmp%0#0",
        "{box_del}"
      ]
    },
    "1341": {
      "op": "pop",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "prop#0",
        "tmp%0#0"
      ]
    },
    "1342": {
      "op": "swap",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "tmp%0#0",
        "prop#0"
      ]
    },
    "1343": {
      "op": "box_put",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ]
    },
    "1344": {
      "op": "bytec 7 // \"milestoneVotes_\"",
      "defined_out": [
        "\"milestoneVotes_\"",
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "\"milestoneVotes_\""
      ]
    },
    "1346": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"milestoneVotes_\"",
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "proposal_id#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "\"milestoneVotes_\"",
        "proposal_id#0 (copy)"
      ]
    },
    "1348": {
      "op": "concat",
      "defined_out": [
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "tmp%19#0"
      ]
    },
    "1349": {
      "op": "dup",
      "defined_out": [
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "1350": {
      "op": "box_del",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "tmp%19#0",
        "{box_del}"
      ]
    },
    "1351": {
      "op": "pop",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "tmp%19#0"
      ]
    },
    "1352": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "item_start_offset%0#0",
        "new_milestones#0",
        "prop#0",
        "tmp%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0",
        "tmp%19#0",
        "0x0000"
      ]
    },
    "1353": {
      "op": "box_put",
      "stack_out": [
        "idx#2",
        "tmp%0#0",
        "prop#0",
        "tmp%7#0",
        "item_start_offset%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "current_time#0",
        "new_milestones#0",
        "idx#0"
      ]
    },
    "1354": {
      "retsub": true,
      "op": "retsub"
    },
    "1355": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.vote_milestone",
      "params": {
        "proposal_id#0": "bytes",
        "vote#0": "bytes"
      },
      "block": "vote_milestone",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1358": {
      "op": "bytec_3 // \"proposals\"",
      "defined_out": [
        "\"proposals\""
      ],
      "stack_out": [
        "\"proposals\""
      ]
    },
    "1359": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ]
    },
    "1361": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1362": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1364": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1365": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1367": {
      "error": "Proposal doesn't exist",
      "op": "assert // Proposal doesn't exist",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1368": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1369": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%1#0",
        "prop#0"
      ]
    },
    "1370": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%1#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1371": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1373": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0"
      ]
    },
    "1374": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1375": {
      "op": "pushint 74 // 74",
      "defined_out": [
        "74",
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)",
        "74"
      ]
    },
    "1377": {
      "op": "extract_uint64",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%3#0"
      ]
    },
    "1378": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1379": {
      "op": "uncover 2",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "prop#0"
      ]
    },
    "1381": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1382": {
      "op": "intc_3 // 56",
      "defined_out": [
        "56",
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "prop#0",
        "prop#0 (copy)",
        "56"
      ]
    },
    "1383": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "prop#0",
        "item_start_offset%0#0"
      ]
    },
    "1384": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "prop#0",
        "item_start_offset%0#0",
        "prop#0 (copy)"
      ]
    },
    "1386": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "prop#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1387": {
      "op": "substring3",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1388": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "1389": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1392": {
      "op": "dig 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1394": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "tmp%3#0 (copy)",
        "2"
      ]
    },
    "1395": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1396": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1398": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1399": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1400": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "tmp%4#0"
      ]
    },
    "1402": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "tmp%4#0",
        "0"
      ]
    },
    "1403": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "1404": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "tmp%3#0"
      ]
    },
    "1406": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "1407": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "next_index%0#0"
      ]
    },
    "1408": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "array_length%0#0"
      ]
    },
    "1409": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_index%0#0 (copy)",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "array_length%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "1411": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "1412": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1414": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "1415": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_index%0#0"
      ]
    },
    "1417": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_index%0#0",
        "2"
      ]
    },
    "1418": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "1419": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1421": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "1422": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1423": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "1425": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "1426": {
      "op": "substring3",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0"
      ]
    },
    "1427": {
      "op": "bytec 7 // \"milestoneVotes_\"",
      "defined_out": [
        "\"milestoneVotes_\"",
        "milestone#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "\"milestoneVotes_\""
      ]
    },
    "1429": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "\"milestoneVotes_\"",
        "proposal_id#0 (copy)"
      ]
    },
    "1431": {
      "op": "concat",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0"
      ]
    },
    "1432": {
      "op": "dup",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1433": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "milestone#0",
        "milestone_votes#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "maybe_exists%2#0"
      ]
    },
    "1434": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "maybe_exists%2#0",
        "milestone_votes#0"
      ]
    },
    "1435": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "maybe_exists%2#0",
        "milestone_votes#0",
        "milestone_votes#0 (copy)"
      ]
    },
    "1436": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%2#0",
        "milestone#0",
        "milestone_votes#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "milestone_votes#0",
        "maybe_exists%2#0"
      ]
    },
    "1438": {
      "error": "check self.milestoneVotes entry exists",
      "op": "assert // check self.milestoneVotes entry exists",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "milestone_votes#0"
      ]
    },
    "1439": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "milestone_votes#0",
        "0"
      ]
    },
    "1440": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0",
        "milestone#0",
        "milestone_votes#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0"
      ]
    },
    "1441": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone_votes#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1442": {
      "block": "vote_milestone_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1444": {
      "op": "frame_dig 6",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%1#0"
      ]
    },
    "1446": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1447": {
      "op": "bz vote_milestone_after_for@4",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1450": {
      "op": "frame_dig 5",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0"
      ]
    },
    "1452": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0"
      ]
    },
    "1455": {
      "op": "frame_dig 7",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1457": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1458": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1460": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0 (copy)",
        "32"
      ]
    },
    "1462": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "1463": {
      "op": "pushint 32 // 32",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "32"
      ]
    },
    "1465": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "addr#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "addr#0"
      ]
    },
    "1466": {
      "op": "txn Sender",
      "defined_out": [
        "addr#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "addr#0",
        "tmp%7#0"
      ]
    },
    "1468": {
      "op": "!=",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%8#0"
      ]
    },
    "1469": {
      "error": "You have already voted for this milestone",
      "op": "assert // You have already voted for this milestone",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1470": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1471": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1472": {
      "op": "frame_bury 7",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1474": {
      "op": "b vote_milestone_for_header@1"
    },
    "1477": {
      "block": "vote_milestone_after_for@4",
      "stack_in": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "prop#0"
      ]
    },
    "1479": {
      "error": "Index access is out of bounds",
      "op": "extract 16 32 // on error: Index access is out of bounds",
      "defined_out": [
        "prop#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1482": {
      "op": "txn Sender",
      "defined_out": [
        "prop#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%9#0"
      ]
    },
    "1484": {
      "op": "!=",
      "defined_out": [
        "prop#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%10#0"
      ]
    },
    "1485": {
      "error": "Creator cannot vote",
      "op": "assert // Creator cannot vote",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1486": {
      "op": "frame_dig 3",
      "defined_out": [
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0"
      ]
    },
    "1488": {
      "op": "dup",
      "defined_out": [
        "milestone#0",
        "milestone#0 (copy)",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "1489": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "milestone#0",
        "milestone#0 (copy)",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone#0 (copy)",
        "10"
      ]
    },
    "1491": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%1#0",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "item_start_offset%1#0"
      ]
    },
    "1492": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "item_start_offset%1#0",
        "milestone#0 (copy)"
      ]
    },
    "1494": {
      "op": "len",
      "defined_out": [
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1495": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "milestone#0 (copy)"
      ]
    },
    "1497": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone#0 (copy)",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1499": {
      "op": "substring3",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%11#0"
      ]
    },
    "1500": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "milestone#0",
        "prop#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%11#0",
        "0x0000"
      ]
    },
    "1501": {
      "op": "!=",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%12#0"
      ]
    },
    "1502": {
      "error": "Proof is not submitted yet",
      "op": "assert // Proof is not submitted yet",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0"
      ]
    },
    "1503": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "current_time#0"
      ]
    },
    "1505": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "current_time#0",
        "milestone#0"
      ]
    },
    "1506": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "current_time#0",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "current_time#0",
        "milestone#0",
        "45"
      ]
    },
    "1508": {
      "op": "extract_uint64",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "prop#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "current_time#0",
        "tmp%14#0"
      ]
    },
    "1509": {
      "op": "<",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%15#0"
      ]
    },
    "1510": {
      "error": "Voting period has ended",
      "op": "assert // Voting period has ended",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1511": {
      "op": "frame_dig -2",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "proposal_id#0 (copy)"
      ]
    },
    "1513": {
      "op": "txn Sender",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "proposal_id#0 (copy)",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "proposal_id#0 (copy)",
        "tmp%16#0"
      ]
    },
    "1515": {
      "op": "concat",
      "defined_out": [
        "donator_box_key#0",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "donator_box_key#0"
      ]
    },
    "1516": {
      "op": "bytec 8 // \"donations\"",
      "defined_out": [
        "\"donations\"",
        "donator_box_key#0",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "donator_box_key#0",
        "\"donations\""
      ]
    },
    "1518": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "\"donations\"",
        "donator_box_key#0"
      ]
    },
    "1519": {
      "op": "concat",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%17#0"
      ]
    },
    "1520": {
      "op": "dup",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "1521": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "milestone#0",
        "prop#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%17#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1522": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%17#0",
        "maybe_exists%3#0"
      ]
    },
    "1524": {
      "error": "You have not donated to this proposal",
      "op": "assert // You have not donated to this proposal",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%17#0"
      ]
    },
    "1525": {
      "op": "box_get",
      "defined_out": [
        "amount_donated#0",
        "maybe_exists%4#0",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "amount_donated#0",
        "maybe_exists%4#0"
      ]
    },
    "1526": {
      "error": "check self.donations entry exists",
      "op": "assert // check self.donations entry exists",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "amount_donated#0"
      ]
    },
    "1527": {
      "op": "dup",
      "defined_out": [
        "amount_donated#0",
        "amount_donated#0 (copy)",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "amount_donated#0",
        "amount_donated#0 (copy)"
      ]
    },
    "1528": {
      "op": "pushbytes 0x00000000000f4240",
      "defined_out": [
        "0x00000000000f4240",
        "amount_donated#0",
        "amount_donated#0 (copy)",
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "amount_donated#0",
        "amount_donated#0 (copy)",
        "0x00000000000f4240"
      ]
    },
    "1538": {
      "op": "b>=",
      "defined_out": [
        "amount_donated#0",
        "milestone#0",
        "prop#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "amount_donated#0",
        "tmp%19#0"
      ]
    },
    "1539": {
      "error": "Should have donated more than 1 Algo to vote",
      "op": "assert // Should have donated more than 1 Algo to vote",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "amount_donated#0"
      ]
    },
    "1540": {
      "op": "btoi",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%20#0"
      ]
    },
    "1541": {
      "op": "pushint 1000000 // 1000000",
      "defined_out": [
        "1000000",
        "milestone#0",
        "prop#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%20#0",
        "1000000"
      ]
    },
    "1545": {
      "op": "/",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%21#0"
      ]
    },
    "1546": {
      "op": "sqrt",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "weight#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0"
      ]
    },
    "1547": {
      "op": "frame_dig -1",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "vote#0 (copy)",
        "weight#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "vote#0 (copy)"
      ]
    },
    "1549": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "milestone#0",
        "prop#0",
        "vote#0 (copy)",
        "weight#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "vote#0 (copy)",
        "0x00"
      ]
    },
    "1550": {
      "op": "!=",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%22#0",
        "weight#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "tmp%22#0"
      ]
    },
    "1551": {
      "op": "bz vote_milestone_else_body@6",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0"
      ]
    },
    "1554": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0"
      ]
    },
    "1556": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "1557": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "milestone#0",
        "milestone#0 (copy)",
        "prop#0",
        "weight#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0",
        "milestone#0 (copy)",
        "12"
      ]
    },
    "1559": {
      "op": "extract_uint64",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "tmp%24#0",
        "weight#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0",
        "tmp%24#0"
      ]
    },
    "1560": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%24#0",
        "weight#0"
      ]
    },
    "1562": {
      "op": "+",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "to_encode%0#0"
      ]
    },
    "1563": {
      "op": "itob",
      "defined_out": [
        "milestone#0",
        "prop#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "val_as_bytes%0#0"
      ]
    },
    "1564": {
      "op": "replace2 12",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0"
      ]
    },
    "1566": {
      "op": "frame_bury 3",
      "defined_out": [
        "milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1568": {
      "block": "vote_milestone_after_if_else@7",
      "stack_in": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "milestone#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0"
      ]
    },
    "1570": {
      "op": "dup",
      "defined_out": [
        "milestone#0",
        "milestone#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "1571": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "milestone#0",
        "milestone#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone#0 (copy)",
        "28"
      ]
    },
    "1573": {
      "op": "extract_uint64",
      "defined_out": [
        "milestone#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%28#0"
      ]
    },
    "1574": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "milestone#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%28#0",
        "1"
      ]
    },
    "1575": {
      "op": "+",
      "defined_out": [
        "milestone#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "to_encode%2#0"
      ]
    },
    "1576": {
      "op": "itob",
      "defined_out": [
        "milestone#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "val_as_bytes%2#0"
      ]
    },
    "1577": {
      "op": "replace2 28",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0"
      ]
    },
    "1579": {
      "op": "frame_dig 5",
      "defined_out": [
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone_votes#0"
      ]
    },
    "1581": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1584": {
      "op": "txn Sender",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "expr_value_trimmed%0#0",
        "tmp%29#0"
      ]
    },
    "1586": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "concatenated%0#0"
      ]
    },
    "1587": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1588": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1589": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "byte_len%0#0",
        "concatenated%0#0",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "1591": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1592": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1593": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0",
        "milestone#0",
        "milestone_votes#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1596": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1597": {
      "op": "concat",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone_votes#0"
      ]
    },
    "1598": {
      "op": "frame_dig 4",
      "defined_out": [
        "milestone#0",
        "milestone_votes#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%6#0"
      ]
    },
    "1600": {
      "op": "dup",
      "defined_out": [
        "milestone#0",
        "milestone_votes#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ]
    },
    "1601": {
      "op": "box_del",
      "defined_out": [
        "milestone#0",
        "milestone_votes#0",
        "tmp%6#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%6#0",
        "{box_del}"
      ]
    },
    "1602": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%6#0"
      ]
    },
    "1603": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0"
      ]
    },
    "1604": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0"
      ]
    },
    "1605": {
      "op": "frame_dig 0",
      "defined_out": [
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0"
      ]
    },
    "1607": {
      "op": "dup",
      "defined_out": [
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1608": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1609": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0"
      ]
    },
    "1610": {
      "op": "dup",
      "defined_out": [
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)"
      ]
    },
    "1611": {
      "op": "intc_3 // 56",
      "defined_out": [
        "56",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)",
        "56"
      ]
    },
    "1612": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%5#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0"
      ]
    },
    "1613": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "maybe_value%5#0 (copy)"
      ]
    },
    "1615": {
      "op": "len",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "maybe_value%5#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "1616": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%5#0 (copy)"
      ]
    },
    "1618": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "item_start_offset%2#0 (copy)",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%5#0 (copy)",
        "item_start_offset%2#0 (copy)"
      ]
    },
    "1620": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "maybe_value%5#0 (copy)",
        "item_start_offset%2#0 (copy)",
        "item_end_offset%2#0"
      ]
    },
    "1622": {
      "op": "substring3",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%5#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%32#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "tmp%32#0"
      ]
    },
    "1623": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "tmp%32#0",
        "milestone#0"
      ]
    },
    "1625": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%5#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%32#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "tmp%32#0",
        "milestone#0",
        "tmp%3#0"
      ]
    },
    "1627": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%5#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "updated_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "item_start_offset%2#0",
        "updated_value%0#0"
      ]
    },
    "1630": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_start_offset%2#0",
        "updated_value%0#0",
        "maybe_value%5#0"
      ]
    },
    "1632": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "item_start_offset%2#0",
        "maybe_value%5#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "updated_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_start_offset%2#0",
        "updated_value%0#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "1633": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "updated_value%0#0",
        "maybe_value%5#0",
        "0",
        "item_start_offset%2#0"
      ]
    },
    "1635": {
      "op": "extract3",
      "defined_out": [
        "data_up_to_item%0#0",
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "updated_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "updated_value%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "1636": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "data_up_to_item%0#0",
        "updated_value%0#0"
      ]
    },
    "1637": {
      "op": "concat",
      "defined_out": [
        "milestone#0",
        "milestone_votes#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0",
        "updated_data%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "updated_data%3#0"
      ]
    },
    "1638": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "updated_data%3#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1640": {
      "op": "box_del",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "updated_data%3#0",
        "{box_del}"
      ]
    },
    "1641": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "updated_data%3#0"
      ]
    },
    "1642": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1643": {
      "retsub": true,
      "op": "retsub"
    },
    "1644": {
      "block": "vote_milestone_else_body@6",
      "stack_in": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "milestone#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0"
      ]
    },
    "1646": {
      "op": "dup",
      "defined_out": [
        "milestone#0",
        "milestone#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "1647": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "milestone#0",
        "milestone#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0",
        "milestone#0 (copy)",
        "20"
      ]
    },
    "1649": {
      "op": "extract_uint64",
      "defined_out": [
        "milestone#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "weight#0",
        "milestone#0",
        "tmp%26#0"
      ]
    },
    "1650": {
      "op": "uncover 2",
      "defined_out": [
        "milestone#0",
        "tmp%26#0",
        "weight#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "tmp%26#0",
        "weight#0"
      ]
    },
    "1652": {
      "op": "+",
      "defined_out": [
        "milestone#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "to_encode%1#0"
      ]
    },
    "1653": {
      "op": "itob",
      "defined_out": [
        "milestone#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0",
        "val_as_bytes%1#0"
      ]
    },
    "1654": {
      "op": "replace2 20",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "milestone#0"
      ]
    },
    "1656": {
      "op": "frame_bury 3",
      "defined_out": [
        "milestone#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "milestone#0",
        "tmp%6#0",
        "milestone_votes#0",
        "array_length%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1658": {
      "op": "b vote_milestone_after_if_else@7"
    },
    "1661": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.claim_milestone",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "claim_milestone",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1664": {
      "op": "bytec_3 // \"proposals\"",
      "defined_out": [
        "\"proposals\""
      ],
      "stack_out": [
        "\"proposals\""
      ]
    },
    "1665": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ]
    },
    "1667": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1668": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1669": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1670": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1672": {
      "error": "Proposal doesn't exist",
      "op": "assert // Proposal doesn't exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1673": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1674": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1675": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "tmp%0#0",
        "prop#0"
      ]
    },
    "1676": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1677": {
      "op": "pushint 74 // 74",
      "defined_out": [
        "74",
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "prop#0 (copy)",
        "74"
      ]
    },
    "1679": {
      "op": "extract_uint64",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0"
      ]
    },
    "1680": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "prop#0 (copy)"
      ]
    },
    "1682": {
      "op": "intc_3 // 56",
      "defined_out": [
        "56",
        "prop#0",
        "prop#0 (copy)",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "prop#0 (copy)",
        "56"
      ]
    },
    "1683": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0"
      ]
    },
    "1684": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0",
        "prop#0 (copy)"
      ]
    },
    "1686": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1687": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "prop#0 (copy)"
      ]
    },
    "1689": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "prop#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1691": {
      "op": "substring3",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1692": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "1693": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1696": {
      "op": "dig 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1698": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "tmp%3#0 (copy)",
        "2"
      ]
    },
    "1699": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1700": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1702": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1703": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1704": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "tmp%4#0"
      ]
    },
    "1706": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "tmp%4#0",
        "0"
      ]
    },
    "1707": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "1708": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1710": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "tmp%3#0 (copy)",
        "1"
      ]
    },
    "1711": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "next_index%0#0"
      ]
    },
    "1712": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "array_length%0#0"
      ]
    },
    "1713": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_index%0#0 (copy)",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "array_length%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "1715": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "1716": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1718": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "1719": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "1721": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_index%0#0 (copy)",
        "2"
      ]
    },
    "1722": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_item_offset_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "1723": {
      "op": "dig 5",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1725": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "1726": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_item_offset%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1727": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "1729": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "end_offset%0#0"
      ]
    },
    "1730": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "item_offset%0#0",
        "next_index%0#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1732": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "end_offset%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1734": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "1736": {
      "op": "substring3",
      "defined_out": [
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1737": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0"
      ]
    },
    "1739": {
      "op": "dig 1",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "milestone#0 (copy)",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "milestone#0 (copy)"
      ]
    },
    "1741": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "current_time#0",
        "milestone#0",
        "milestone#0 (copy)",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "milestone#0 (copy)",
        "10"
      ]
    },
    "1743": {
      "op": "extract_uint16",
      "defined_out": [
        "current_time#0",
        "item_start_offset%1#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "item_start_offset%1#0"
      ]
    },
    "1744": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "item_start_offset%1#0",
        "milestone#0 (copy)"
      ]
    },
    "1746": {
      "op": "len",
      "defined_out": [
        "current_time#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1747": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "milestone#0 (copy)"
      ]
    },
    "1749": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "milestone#0 (copy)",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1751": {
      "op": "substring3",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "tmp%6#0"
      ]
    },
    "1752": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "current_time#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "tmp%6#0",
        "0x0000"
      ]
    },
    "1753": {
      "op": "!=",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "tmp%7#0"
      ]
    },
    "1754": {
      "error": "Proof is not submitted yet",
      "op": "assert // Proof is not submitted yet",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0"
      ]
    },
    "1755": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "milestone#0 (copy)"
      ]
    },
    "1757": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "current_time#0",
        "milestone#0",
        "milestone#0 (copy)",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "milestone#0 (copy)",
        "37"
      ]
    },
    "1759": {
      "op": "extract_uint64",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "tmp%9#0"
      ]
    },
    "1760": {
      "error": "Proof not submitted yet",
      "op": "assert // Proof not submitted yet",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0"
      ]
    },
    "1761": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "milestone#0 (copy)"
      ]
    },
    "1763": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "current_time#0",
        "milestone#0",
        "milestone#0 (copy)",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "milestone#0 (copy)",
        "45"
      ]
    },
    "1765": {
      "op": "extract_uint64",
      "defined_out": [
        "current_time#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "current_time#0",
        "tmp%12#0"
      ]
    },
    "1766": {
      "op": ">",
      "defined_out": [
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%13#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%13#0"
      ]
    },
    "1767": {
      "error": "Voting period not ended yet",
      "op": "assert // Voting period not ended yet",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1768": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "1769": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "milestone#0",
        "milestone#0 (copy)",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "milestone#0 (copy)",
        "12"
      ]
    },
    "1771": {
      "op": "extract_uint64",
      "defined_out": [
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%15#0"
      ]
    },
    "1772": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%15#0",
        "milestone#0 (copy)"
      ]
    },
    "1774": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "milestone#0",
        "milestone#0 (copy)",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%15#0",
        "milestone#0 (copy)",
        "20"
      ]
    },
    "1776": {
      "op": "extract_uint64",
      "defined_out": [
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "1777": {
      "op": ">",
      "defined_out": [
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%18#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%18#0"
      ]
    },
    "1778": {
      "error": "Milestone not approved",
      "op": "assert // Milestone not approved",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1779": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "milestone#0 (copy)"
      ]
    },
    "1780": {
      "op": "intc 4 // 288",
      "defined_out": [
        "288",
        "milestone#0",
        "milestone#0 (copy)",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "milestone#0 (copy)",
        "288"
      ]
    },
    "1782": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "is_true%0#0"
      ]
    },
    "1783": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1784": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1785": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1787": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "encoded_bool%0#0"
      ]
    },
    "1788": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "1789": {
      "op": "==",
      "defined_out": [
        "milestone#0",
        "next_index%0#0",
        "prop#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%19#0"
      ]
    },
    "1790": {
      "error": "Milestone already claimed",
      "op": "assert // Milestone already claimed",
      "stack_out": [
        "tmp%0#0",
        "prop#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1791": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "prop#0"
      ]
    },
    "1793": {
      "error": "Index access is out of bounds",
      "op": "extract 16 32 // on error: Index access is out of bounds",
      "defined_out": [
        "creator#0",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "creator#0"
      ]
    },
    "1796": {
      "op": "itxn_begin"
    },
    "1797": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "creator#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "creator#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1799": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "creator#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "milestone#0 (copy)"
      ]
    },
    "1801": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "creator#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "milestone#0 (copy)",
        "2"
      ]
    },
    "1802": {
      "op": "extract_uint64",
      "defined_out": [
        "creator#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "creator#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "1803": {
      "op": "itxn_field Amount",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "creator#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1805": {
      "op": "itxn_field Sender"
    },
    "1807": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1809": {
      "op": "intc_0 // pay",
      "defined_out": [
        "milestone#0",
        "next_index%0#0",
        "pay",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "pay"
      ]
    },
    "1810": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1812": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "0"
      ]
    },
    "1813": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1815": {
      "op": "itxn_submit"
    },
    "1816": {
      "op": "intc 4 // 288",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "288"
      ]
    },
    "1818": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "288",
        "1"
      ]
    },
    "1819": {
      "op": "setbit",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0"
      ]
    },
    "1820": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1822": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1823": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0"
      ]
    },
    "1824": {
      "op": "dup",
      "defined_out": [
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1825": {
      "op": "intc_3 // 56",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "56"
      ]
    },
    "1826": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "item_start_offset%2#0"
      ]
    },
    "1827": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1829": {
      "op": "len",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "1830": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1832": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "item_start_offset%2#0 (copy)",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%2#0 (copy)",
        "item_start_offset%2#0 (copy)"
      ]
    },
    "1834": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "maybe_value%2#0 (copy)",
        "item_start_offset%2#0 (copy)",
        "item_end_offset%2#0"
      ]
    },
    "1836": {
      "op": "substring3",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "milestone#0",
        "next_index%0#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "milestone#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "tmp%22#0"
      ]
    },
    "1837": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "next_index%0#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "tmp%22#0",
        "milestone#0"
      ]
    },
    "1839": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "tmp%22#0",
        "milestone#0",
        "tmp%3#0"
      ]
    },
    "1841": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "next_index%0#0",
        "tmp%0#0",
        "updated_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "updated_value%0#0"
      ]
    },
    "1844": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "item_start_offset%2#0",
        "updated_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "1846": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "item_start_offset%2#0",
        "updated_value%0#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "1847": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "updated_value%0#0",
        "maybe_value%2#0",
        "0",
        "item_start_offset%2#0"
      ]
    },
    "1849": {
      "op": "extract3",
      "defined_out": [
        "data_up_to_item%0#0",
        "next_index%0#0",
        "tmp%0#0",
        "updated_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "updated_value%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "1850": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "data_up_to_item%0#0",
        "updated_value%0#0"
      ]
    },
    "1851": {
      "op": "concat",
      "defined_out": [
        "next_index%0#0",
        "tmp%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "updated_data%1#0"
      ]
    },
    "1852": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "updated_data%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1854": {
      "op": "box_del",
      "defined_out": [
        "next_index%0#0",
        "tmp%0#0",
        "updated_data%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "1855": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "updated_data%1#0"
      ]
    },
    "1856": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "updated_data%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1858": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0",
        "tmp%0#0 (copy)",
        "updated_data%1#0"
      ]
    },
    "1859": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "next_index%0#0"
      ]
    },
    "1860": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1861": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1863": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1864": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0"
      ]
    },
    "1865": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "1866": {
      "op": "replace2 74",
      "defined_out": [
        "tmp%0#0",
        "updated_data%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "updated_data%2#0"
      ]
    },
    "1868": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "updated_data%2#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1870": {
      "op": "box_del",
      "stack_out": [
        "tmp%0#0",
        "updated_data%2#0",
        "{box_del}"
      ]
    },
    "1871": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "updated_data%2#0"
      ]
    },
    "1872": {
      "op": "box_put",
      "stack_out": []
    },
    "1873": {
      "retsub": true,
      "op": "retsub"
    },
    "1874": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.refund_if_inactive",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "refund_if_inactive",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1877": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "remaining_amount#0"
      ]
    },
    "1879": {
      "op": "dup",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0"
      ]
    },
    "1880": {
      "op": "bytec_3 // \"proposals\"",
      "defined_out": [
        "\"proposals\""
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "\"proposals\""
      ]
    },
    "1881": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "\"proposals\"",
        "proposal_id#0 (copy)"
      ]
    },
    "1883": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%0#0"
      ]
    },
    "1884": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1885": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1886": {
      "op": "bury 1",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1888": {
      "error": "Proposal doesn't exist",
      "op": "assert // Proposal doesn't exist",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%0#0"
      ]
    },
    "1889": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1890": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "maybe_exists%1#0",
        "prop#0"
      ]
    },
    "1891": {
      "op": "dup",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "maybe_exists%1#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1892": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%1#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "maybe_exists%1#0"
      ]
    },
    "1894": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0"
      ]
    },
    "1895": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "prop#0 (copy)"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1896": {
      "op": "pushint 74 // 74",
      "defined_out": [
        "74",
        "prop#0",
        "prop#0 (copy)"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "prop#0 (copy)",
        "74"
      ]
    },
    "1898": {
      "op": "extract_uint64",
      "defined_out": [
        "prop#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "tmp%3#0"
      ]
    },
    "1899": {
      "op": "dig 1",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "tmp%3#0",
        "prop#0 (copy)"
      ]
    },
    "1901": {
      "op": "intc_3 // 56",
      "defined_out": [
        "56",
        "prop#0",
        "prop#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "tmp%3#0",
        "prop#0 (copy)",
        "56"
      ]
    },
    "1902": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "prop#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0"
      ]
    },
    "1903": {
      "op": "dig 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0",
        "prop#0 (copy)"
      ]
    },
    "1905": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "prop#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1906": {
      "op": "uncover 3",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "prop#0"
      ]
    },
    "1908": {
      "op": "cover 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "prop#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1910": {
      "op": "substring3",
      "defined_out": [
        "prop#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1911": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "1912": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1915": {
      "op": "dig 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1917": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "tmp%3#0 (copy)",
        "2"
      ]
    },
    "1918": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1919": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1921": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1922": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "tmp%4#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1923": {
      "op": "uncover 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "tmp%4#0"
      ]
    },
    "1925": {
      "op": "intc_1 // 0",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "tmp%4#0",
        "0"
      ]
    },
    "1926": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "1927": {
      "op": "uncover 3",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "tmp%3#0"
      ]
    },
    "1929": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "prop#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "tmp%3#0",
        "1"
      ]
    },
    "1930": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "next_index%0#0"
      ]
    },
    "1931": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "array_length%0#0"
      ]
    },
    "1932": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "next_index%0#0 (copy)",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "array_length%0#0",
        "next_index%0#0 (copy)"
      ]
    },
    "1934": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0"
      ]
    },
    "1935": {
      "op": "dig 3",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1937": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "next_index%0#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "1938": {
      "op": "uncover 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_index%0#0"
      ]
    },
    "1940": {
      "op": "intc_2 // 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_index%0#0",
        "2"
      ]
    },
    "1941": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "1942": {
      "op": "dig 4",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1944": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "1945": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1946": {
      "op": "uncover 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "1948": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "item_offset%0#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "1949": {
      "op": "substring3",
      "defined_out": [
        "current_milestone#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "current_milestone#0"
      ]
    },
    "1950": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "current_milestone#0",
        "current_time#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "current_milestone#0",
        "current_time#0"
      ]
    },
    "1952": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "current_time#0",
        "current_milestone#0"
      ]
    },
    "1953": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "current_milestone#0",
        "current_time#0",
        "prop#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "current_time#0",
        "current_milestone#0",
        "37"
      ]
    },
    "1955": {
      "op": "extract_uint64",
      "defined_out": [
        "current_time#0",
        "prop#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "current_time#0",
        "tmp%7#0"
      ]
    },
    "1956": {
      "op": "-",
      "defined_out": [
        "prop#0",
        "time_difference#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0"
      ]
    },
    "1957": {
      "op": "frame_dig -1",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0",
        "proposal_id#0 (copy)"
      ]
    },
    "1959": {
      "op": "txn Sender",
      "defined_out": [
        "prop#0",
        "proposal_id#0 (copy)",
        "time_difference#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0",
        "proposal_id#0 (copy)",
        "tmp%8#0"
      ]
    },
    "1961": {
      "op": "concat",
      "defined_out": [
        "donator_box_key#0",
        "prop#0",
        "time_difference#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0",
        "donator_box_key#0"
      ]
    },
    "1962": {
      "op": "bytec 8 // \"donations\"",
      "defined_out": [
        "\"donations\"",
        "donator_box_key#0",
        "prop#0",
        "time_difference#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0",
        "donator_box_key#0",
        "\"donations\""
      ]
    },
    "1964": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0",
        "\"donations\"",
        "donator_box_key#0"
      ]
    },
    "1965": {
      "op": "concat",
      "defined_out": [
        "prop#0",
        "time_difference#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0",
        "tmp%9#0"
      ]
    },
    "1966": {
      "op": "dup",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "time_difference#0",
        "tmp%9#0",
        "tmp%9#0"
      ]
    },
    "1967": {
      "op": "cover 2",
      "defined_out": [
        "prop#0",
        "time_difference#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "time_difference#0",
        "tmp%9#0"
      ]
    },
    "1969": {
      "op": "dup",
      "defined_out": [
        "prop#0",
        "time_difference#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "time_difference#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "1970": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "prop#0",
        "time_difference#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "time_difference#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1971": {
      "op": "bury 1",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "time_difference#0",
        "tmp%9#0",
        "maybe_exists%2#0"
      ]
    },
    "1973": {
      "error": "You have not donated to this proposal",
      "op": "assert // You have not donated to this proposal",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "time_difference#0",
        "tmp%9#0"
      ]
    },
    "1974": {
      "op": "box_get",
      "defined_out": [
        "amount_donated#0",
        "maybe_exists%3#0",
        "prop#0",
        "time_difference#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "time_difference#0",
        "amount_donated#0",
        "maybe_exists%3#0"
      ]
    },
    "1975": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "time_difference#0",
        "maybe_exists%3#0",
        "amount_donated#0"
      ]
    },
    "1976": {
      "op": "cover 2",
      "defined_out": [
        "amount_donated#0",
        "maybe_exists%3#0",
        "prop#0",
        "time_difference#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "time_difference#0",
        "maybe_exists%3#0"
      ]
    },
    "1978": {
      "error": "check self.donations entry exists",
      "op": "assert // check self.donations entry exists",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "time_difference#0"
      ]
    },
    "1979": {
      "op": "pushint 240 // 240",
      "defined_out": [
        "240",
        "amount_donated#0",
        "prop#0",
        "time_difference#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "time_difference#0",
        "240"
      ]
    },
    "1982": {
      "op": ">",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%11#0"
      ]
    },
    "1983": {
      "op": "bz refund_if_inactive_after_if_else@5",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ]
    },
    "1986": {
      "op": "frame_dig 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "prop#0"
      ]
    },
    "1988": {
      "op": "dup",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "prop#0",
        "prop#0 (copy)"
      ]
    },
    "1989": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "amount_donated#0",
        "prop#0",
        "prop#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "prop#0",
        "prop#0 (copy)",
        "8"
      ]
    },
    "1991": {
      "op": "extract_uint64",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "tmp%13#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "prop#0",
        "tmp%13#0"
      ]
    },
    "1992": {
      "op": "swap",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%13#0",
        "prop#0"
      ]
    },
    "1993": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "amount_donated#0",
        "prop#0",
        "tmp%13#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%13#0",
        "prop#0",
        "48"
      ]
    },
    "1995": {
      "op": "extract_uint64",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "1996": {
      "op": "dup",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%15#0"
      ]
    },
    "1997": {
      "op": "frame_bury 1",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "1999": {
      "op": "-",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "remaining_amount#0"
      ]
    },
    "2000": {
      "op": "frame_bury 0",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ]
    },
    "2002": {
      "op": "frame_dig 4",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "amount_donated#0"
      ]
    },
    "2004": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "amount_donated#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "amount_donated#0",
        "0x0000000000000000"
      ]
    },
    "2005": {
      "op": "b>",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%16#0"
      ]
    },
    "2006": {
      "op": "bz refund_if_inactive_after_if_else@5",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ]
    },
    "2009": {
      "op": "frame_dig 4",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "amount_donated#0"
      ]
    },
    "2011": {
      "op": "btoi",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%17#0"
      ]
    },
    "2012": {
      "op": "frame_dig 0",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%17#0",
        "remaining_amount#0"
      ]
    },
    "2014": {
      "op": "*",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%18#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%18#0"
      ]
    },
    "2015": {
      "op": "frame_dig 1",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%18#0",
        "tmp%15#0"
      ]
    },
    "2017": {
      "op": "/",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "to_encode%0#0"
      ]
    },
    "2018": {
      "op": "itob",
      "defined_out": [
        "amount_donated#0",
        "prop#0",
        "refund_amount#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "refund_amount#0"
      ]
    },
    "2019": {
      "op": "itxn_begin"
    },
    "2020": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "amount_donated#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "prop#0",
        "refund_amount#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "refund_amount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2022": {
      "op": "txn Sender",
      "defined_out": [
        "amount_donated#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "prop#0",
        "refund_amount#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "refund_amount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "2024": {
      "op": "uncover 2",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "refund_amount#0"
      ]
    },
    "2026": {
      "op": "btoi",
      "defined_out": [
        "amount_donated#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "2027": {
      "op": "itxn_field Amount",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "2029": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2031": {
      "op": "itxn_field Sender",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ]
    },
    "2033": {
      "op": "intc_0 // pay",
      "defined_out": [
        "amount_donated#0",
        "pay",
        "prop#0",
        "remaining_amount#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "pay"
      ]
    },
    "2034": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ]
    },
    "2036": {
      "op": "intc_1 // 0",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "0"
      ]
    },
    "2037": {
      "op": "itxn_field Fee",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ]
    },
    "2039": {
      "op": "itxn_submit"
    },
    "2040": {
      "op": "frame_dig 3",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%9#0"
      ]
    },
    "2042": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0",
        "tmp%9#0",
        "0x0000000000000000"
      ]
    },
    "2043": {
      "op": "box_put",
      "stack_out": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ]
    },
    "2044": {
      "block": "refund_if_inactive_after_if_else@5",
      "stack_in": [
        "remaining_amount#0",
        "tmp%15#0",
        "prop#0",
        "tmp%9#0",
        "amount_donated#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2045": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.fund_future_self",
      "params": {
        "primary#0": "bytes",
        "backup#0": "bytes",
        "unlock_time#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "fund_future_self",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2048": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2050": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2052": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2054": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2055": {
      "error": "Payment must go to contract",
      "op": "assert // Payment must go to contract",
      "stack_out": []
    },
    "2056": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2058": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2060": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "2061": {
      "error": "Must fund with positive amount",
      "op": "assert // Must fund with positive amount",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2062": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "payment#0 (copy)"
      ]
    },
    "2064": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "2066": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2068": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%7#0"
      ]
    },
    "2069": {
      "error": "Funding must be from caller",
      "op": "assert // Funding must be from caller",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2070": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "2071": {
      "op": "bytec 5 // \"noOfFutureFunds\"",
      "defined_out": [
        "\"noOfFutureFunds\"",
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "\"noOfFutureFunds\""
      ]
    },
    "2073": {
      "op": "app_global_get_ex",
      "defined_out": [
        "idx#0",
        "maybe_exists%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "idx#0",
        "maybe_exists%0#0"
      ]
    },
    "2074": {
      "error": "check self.no_of_future_funds exists",
      "op": "assert // check self.no_of_future_funds exists",
      "stack_out": [
        "tmp%3#0",
        "idx#0"
      ]
    },
    "2075": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "tmp%3#0"
      ]
    },
    "2076": {
      "op": "itob",
      "defined_out": [
        "idx#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "val_as_bytes%0#0"
      ]
    },
    "2077": {
      "op": "frame_dig -4",
      "defined_out": [
        "idx#0",
        "primary#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "val_as_bytes%0#0",
        "primary#0 (copy)"
      ]
    },
    "2079": {
      "op": "frame_dig -3",
      "defined_out": [
        "backup#0 (copy)",
        "idx#0",
        "primary#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "val_as_bytes%0#0",
        "primary#0 (copy)",
        "backup#0 (copy)"
      ]
    },
    "2081": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "idx#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2082": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "idx#0",
        "unlock_time#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0",
        "unlock_time#0 (copy)"
      ]
    },
    "2084": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "idx#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2085": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "2086": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2087": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_tuple_buffer%4#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "encoded_tuple_buffer%4#0",
        "0x00"
      ]
    },
    "2088": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2089": {
      "op": "bytec 9 // \"futureFund_\"",
      "defined_out": [
        "\"futureFund_\"",
        "encoded_tuple_buffer%5#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "encoded_tuple_buffer%5#0",
        "\"futureFund_\""
      ]
    },
    "2091": {
      "op": "dig 2",
      "defined_out": [
        "\"futureFund_\"",
        "encoded_tuple_buffer%5#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "encoded_tuple_buffer%5#0",
        "\"futureFund_\"",
        "idx#0 (copy)"
      ]
    },
    "2093": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "idx#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "encoded_tuple_buffer%5#0",
        "tmp%8#0"
      ]
    },
    "2094": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "tmp%8#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2095": {
      "op": "box_put",
      "stack_out": [
        "idx#0"
      ]
    },
    "2096": {
      "op": "btoi",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2097": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "1"
      ]
    },
    "2098": {
      "op": "+",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "2099": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "2100": {
      "op": "bytec 5 // \"noOfFutureFunds\"",
      "stack_out": [
        "val_as_bytes%1#0",
        "\"noOfFutureFunds\""
      ]
    },
    "2102": {
      "op": "swap",
      "stack_out": [
        "\"noOfFutureFunds\"",
        "val_as_bytes%1#0"
      ]
    },
    "2103": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2104": {
      "retsub": true,
      "op": "retsub"
    },
    "2105": {
      "subroutine": "smart_contracts.ff.contract.ProposalContract.claim_future_self",
      "params": {
        "fund_id#0": "bytes"
      },
      "block": "claim_future_self",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2108": {
      "op": "bytec 9 // \"futureFund_\"",
      "defined_out": [
        "\"futureFund_\""
      ],
      "stack_out": [
        "\"futureFund_\""
      ]
    },
    "2110": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"futureFund_\"",
        "fund_id#0 (copy)"
      ],
      "stack_out": [
        "\"futureFund_\"",
        "fund_id#0 (copy)"
      ]
    },
    "2112": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2113": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2115": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2116": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2118": {
      "error": "Fund does not exist",
      "op": "assert // Fund does not exist",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2119": {
      "op": "box_get",
      "defined_out": [
        "fund#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "maybe_exists%1#0"
      ]
    },
    "2120": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%1#0",
        "fund#0"
      ]
    },
    "2121": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%1#0",
        "fund#0",
        "fund#0 (copy)"
      ]
    },
    "2122": {
      "op": "uncover 2",
      "defined_out": [
        "fund#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "maybe_exists%1#0"
      ]
    },
    "2124": {
      "error": "check self.futureFunds entry exists",
      "op": "assert // check self.futureFunds entry exists",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2125": {
      "op": "dup",
      "defined_out": [
        "fund#0",
        "fund#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "fund#0 (copy)"
      ]
    },
    "2126": {
      "op": "pushint 640 // 640",
      "defined_out": [
        "640",
        "fund#0",
        "fund#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "fund#0 (copy)",
        "640"
      ]
    },
    "2129": {
      "op": "getbit",
      "defined_out": [
        "fund#0",
        "is_true%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "is_true%0#0"
      ]
    },
    "2130": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "fund#0",
        "is_true%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2131": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2132": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2134": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "fund#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "encoded_bool%0#0"
      ]
    },
    "2135": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "2136": {
      "op": "==",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "tmp%2#0"
      ]
    },
    "2137": {
      "error": "Already claimed",
      "op": "assert // Already claimed",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2138": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "tmp%3#0"
      ]
    },
    "2140": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "tmp%3#0",
        "fund#0 (copy)"
      ]
    },
    "2142": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "fund#0",
        "fund#0 (copy)",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "tmp%3#0",
        "fund#0 (copy)",
        "64"
      ]
    },
    "2144": {
      "op": "extract_uint64",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "2145": {
      "op": ">=",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "tmp%6#0"
      ]
    },
    "2146": {
      "error": "Too early to claim",
      "op": "assert // Too early to claim",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2147": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "tmp%7#0"
      ]
    },
    "2150": {
      "op": "txn Sender",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2152": {
      "op": "==",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "tmp%9#0"
      ]
    },
    "2153": {
      "op": "bnz claim_future_self_bool_true@2",
      "stack_out": [
        "tmp%0#0",
        "fund#0"
      ]
    },
    "2156": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2158": {
      "error": "Index access is out of bounds",
      "op": "extract 32 32 // on error: Index access is out of bounds",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "tmp%10#0"
      ]
    },
    "2161": {
      "op": "txn Sender",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2163": {
      "op": "==",
      "defined_out": [
        "fund#0",
        "tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "tmp%12#0"
      ]
    },
    "2164": {
      "op": "bz claim_future_self_bool_false@3",
      "stack_out": [
        "tmp%0#0",
        "fund#0"
      ]
    },
    "2167": {
      "block": "claim_future_self_bool_true@2",
      "stack_in": [
        "tmp%0#0",
        "fund#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "or_result%0#0"
      ]
    },
    "2168": {
      "block": "claim_future_self_bool_merge@4",
      "stack_in": [
        "tmp%0#0",
        "fund#0",
        "or_result%0#0"
      ],
      "error": "Not authorized",
      "op": "assert // Not authorized",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "fund#0"
      ]
    },
    "2169": {
      "op": "itxn_begin"
    },
    "2170": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2172": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "2174": {
      "op": "frame_dig 1",
      "defined_out": [
        "fund#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "fund#0"
      ]
    },
    "2176": {
      "op": "dup",
      "defined_out": [
        "fund#0",
        "fund#0 (copy)",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "fund#0 (copy)",
        "fund#0 (copy)"
      ]
    },
    "2177": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "fund#0 (copy)"
      ]
    },
    "2179": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "fund#0",
        "fund#0 (copy)",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "fund#0 (copy)",
        "72"
      ]
    },
    "2181": {
      "op": "extract_uint64",
      "defined_out": [
        "fund#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "2182": {
      "op": "itxn_field Amount",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "2184": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2186": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2188": {
      "op": "intc_0 // pay",
      "defined_out": [
        "fund#0",
        "pay"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "pay"
      ]
    },
    "2189": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2191": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "fund#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "0"
      ]
    },
    "2192": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2194": {
      "op": "itxn_submit"
    },
    "2195": {
      "op": "pushint 640 // 640",
      "defined_out": [
        "640",
        "fund#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "640"
      ]
    },
    "2198": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "640",
        "fund#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "640",
        "1"
      ]
    },
    "2199": {
      "op": "setbit",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0"
      ]
    },
    "2200": {
      "op": "frame_dig 0",
      "defined_out": [
        "fund#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "fund#0",
        "tmp%0#0"
      ]
    },
    "2202": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "tmp%0#0",
        "fund#0"
      ]
    },
    "2203": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "fund#0"
      ]
    },
    "2204": {
      "retsub": true,
      "op": "retsub"
    },
    "2205": {
      "block": "claim_future_self_bool_false@3",
      "stack_in": [
        "tmp%0#0",
        "fund#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "fund#0",
        "or_result%0#0"
      ]
    },
    "2206": {
      "op": "b claim_future_self_bool_merge@4"
    }
  }
}